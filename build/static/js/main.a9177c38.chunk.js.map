{"version":3,"sources":["actions/types.js","reducers/auth.js","reducers/message.js","reducers/form.js","reducers/index.js","store.js","images/EvolveUlog.jpg","components/auth.component/StyleForm/StyledForm.js","config/config.js","services/auth.service.js","actions/auth.js","components/auth.component/login.component.js","components/auth.component/register.component.js","components/auth.component/profile.component.js","services/auth-header.js","services/user.service.js","components/auth.component/user.component.js","components/auth.component/admin.component.js","components/auth.component/student.component.js","components/navbar/Navbar.js","components/home/ProjectListing.js","components/home/GroupedByProjectNum.js","components/home/CatalogList.js","components/home/CheckboxSection.js","components/home/PulldownFilters.js","components/home/Home.js","components/details/Description.js","components/details/TeamMemberName.js","components/details/Screenshot.js","components/details/Link.js","components/details/ListOfThings.js","components/details/DetailsStyled.js","components/details/Details.js","actions/form.js","components/dashboard/StyledInput.js","components/dashboard/Links.js","components/dashboard/Dashboard.js","components/createProjectPage/StyledForm.js","components/createProjectPage/DropdownList.js","components/createProjectPage/CreateProjectTopSection.js","components/createProjectPage/InsertLink.js","constants/form.js","components/createProjectPage/CheckboxSection.js","components/createProjectPage/AutocompleteList.js","components/createProjectPage/ListOfChoices.js","components/createProjectPage/SearchAndAdd.js","components/createProjectPage/UploadImage.js","components/createProjectPage/SubmitButtons.js","components/createProjectPage/FeatureList.js","components/createProjectPage/DescriptionSection.js","components/createProjectPage/CreateProjectPage.js","components/createProjectPage/Edit.js","components/routes/MainStack.js","components/App.js","actions/message.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","SET_WEBSITE_LINK","SET_REPOSITORY_LINK","SET_LINKEDIN_LINK","SET_FORM_DATA","SET_FORM_TITLE","SET_FORM_TEAM_NAME","SET_FORM_DESCRIPTION","SET_FORM_REPO_LINK","SET_FORM_WEBSITE_LINK","SET_FORM_IMAGE","SET_FORM_FEATURE","SET_FORM_LANGUAGES","SET_FORM_FRAMEWORK","SET_FORM_BACKEND","SET_FORM_SELECTED_COHORT","SET_FORM_PROJECT_NUMBER","SET_FORM_TOOLS","SET_FORM_TEAMMATES","SET_FORM_TEAM_MEMBER_ACCOUNTS","CLEAR_FORM","user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","data","name_team_member","project_name","team_name","cohort_num","project_num","description","key_feature","screenshot","screenshot_name","repository","website_link","language","framework","database","extra_tools","team_member_accounts","combineReducers","auth","state","action","type","payload","website","linkedin","message","form","name","extra_tool","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","StyledForm","styled","main","attrs","className","config","BACKEND","URL","API_URL","username","password","axios","post","then","response","accessToken","setItem","stringify","removeItem","email","roles","register","dispatch","console","log","AuthService","Promise","resolve","error","toString","reject","logout","required","value","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","handleClickRegister","loading","e","this","setState","target","preventDefault","history","push","validateAll","checkBtn","context","_errors","length","login","window","location","reload","catch","to","onSubmit","ref","c","placeholder","onChange","validations","disabled","style","display","Component","connect","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","studentRol","adminRol","valcheck","checked","onClick","getCheckboxValueAdmin","getChckeboxValueStudent","Profile","currentUser","substring","substr","id","map","index","authHeader","get","headers","User","content","UserService","getUserBoard","Admin","getAdmin","Student","Navbar","pathname","useLocation","useSelector","redux","useDispatch","src","logo","alt","includes","href","ProjectListing","useHistory","onDeleteProject","fetch","projectData","_id","method","res","json","body","go","err","onEditProject","project","separateNamesByComma","concat","fromNotifications","GroupedByProjectNum","renderedList","item","CatalogList","groupedProjectsArray","desiredProjectNumberOrder","newArray","object","CheckboxSection","useEffect","elements","document","querySelectorAll","i","clearOptions","handleChangeCheckbox","htmlFor","PulldownFilters","useState","cohort","student","listOfOptions","setListOfOptions","renderedCohortList","cohortList","renderedStudentList","studentList","renderedProjectNumberList","desiredProjectNumOrder","Home","url","projectDetails","setprojectDetails","setDesiredProjectNumOrder","languages","setLanguages","frontend","setFrontend","backend","setBackend","setCohortList","setStudentList","clearUpOptions","setClearUpOptions","buildDesiredProjectNumOrder","buildCohortList","buildStudentList","dataFromServer","arrayOfProjectNum","obj","arrayOfCohortNum","arrayOfStudentNames","cohortURL","projectURL","nameURL","languagesURL","frontendUrl","tool","backendURL","event","array","querySelector","parentNode","slice","indexOf","splice","Description","projectNum","cohortNum","TeamMemberName","names","Screenshot","screenshotBase64","setScreenshotBase64","arrayBuffer","img","Uint8Array","btoa","reduce","call","p","String","fromCharCode","Link","accounts","account","data-label","github","linked","ListOfThings","list","label","DetailsStyled","Details","setProject","setScreenshot","match","params","handle","screenshotId","ContainerProject","div","setFormFeature","convertToFormData","formData","FormData","append","postFormData","resp","updateFormData","StyledDashboard","Links","setWebsite","websiteUpdated","setWebsiteUpdated","setRepository","repositoryUpdated","setRepositoryUpdated","setLinkedin","linkedinUpdated","setLinkedinUpdated","handleChange","key","updateStore","setRepositoryStore","setLinkedInStore","handleClick","dataObj","returnedData","StyledInput","Dashboard","handleDesiredProjectNumOrder","forEach","editMode","DropdownList","handleSelectedItem","selectedValue","CreateProjectTopSection","listOfCohorts","setListOfCohorts","listOfProjectsNumber","setListOfProjectsNumber","title","teamName","selectedCohort","selectedProject","validateTitle","handleListOfThingsFromServer","arrayForSetting","autoComplete","id1","labelDropdown1","id2","labelDropdown2","InsertLink","repoLink","websiteLink","setValue","inputId","isRequired","setFormWebsiteLink","onKeyUp","inputValues","sectionId","sectionValues","outerSectionId","innerSectionId","setFramework","renderedCheckbox","arrayOfObj","reference","parentId","values","valuesObj","AutocompleteList","suggestions","indexSuggestion","handleClickAutocomplete","suggestion","data-id","Fragment","ListOfChoices","itemsList","handleClickList","handleItemsList","SearchAndAdd","toAddToTheList","setToAddToTheList","setIndexSuggestion","setSuggestions","inputValue","setInputValue","teamMemberNames","tools","setFormTools","isUniqueItemInArray","oldArray","same","itemOfArray","myInput","myDataList","result","element","toLowerCase","startsWith","searching","listOfItems","keyCode","textContent","resetSuggestions","UploadImage","accept","multiple","files","SubmitButtons","FeatureList","keyFeature","newList","DescriptionSection","validateDescription","rows","resize","CreateProjectPage","setTitle","setTeamName","githubLink","githubLinkIsValid","setGithubLinkIsValid","websiteLinkIsValid","setWebsiteLinkIsValid","isLinkRequired","setIsLinkRequired","setSelectedCohort","selectedProjectNumber","setSelectedProjectNumber","listOfAllStudents","setListOfAllStudents","listOfTools","setListOfTools","serverFailed","setServerFailed","currentStep","setCurrentStep","onPublish","a","goToLink","open","nextStep","prevStep","handleChangeTitle","handleChangeTeamName","handleSelectedCohort","handleSelectedProjectNumber","btnId","isValidate","Edit","projectFromProps","MainStack","showStudent","setShowStudent","showAdmin","setShowAdmin","exact","path","component","App","createBrowserHistory","listen","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a9177c38.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n\nexport const SET_WEBSITE_LINK = 'SET_WEBSITE_LINK';\nexport const SET_REPOSITORY_LINK = 'SET_REPOSITORY_LINK';\nexport const SET_LINKEDIN_LINK = 'SET_LINKEDIN_LINK';\n\n/*Create Project Form Type*/\nexport const SET_FORM_DATA = \"SET_FORM_DATA\";\nexport const SET_FORM_TITLE = \"SET_FORM_TITLE\";\nexport const SET_FORM_TEAM_NAME = \"SET_FORM_TEAM_NAME\";\nexport const SET_FORM_DESCRIPTION = \"SET_FORM_DESCRIPTION\"\nexport const SET_FORM_REPO_LINK = \"SET_FORM_GITHUB_LINK\";;\nexport const SET_FORM_WEBSITE_LINK = \"SET_FORM_WEBSITE_LINK\";\nexport const SET_FORM_IMAGE = \"SET_FORM_IMAGE\";\nexport const SET_FORM_FEATURE = \"SET_FORM_FEATURE\";\nexport const SET_FORM_LANGUAGES = \"SET_FORM_LANGUAGES\";\nexport const SET_FORM_FRAMEWORK = \"SET_FORM_FRAMEWORK\";\nexport const SET_FORM_BACKEND = \"SET_FORM_BACKEND\";\nexport const SET_FORM_SELECTED_COHORT = \"SET_FORM_SELECTED_COHORT\";\nexport const SET_FORM_PROJECT_NUMBER = \"SET_FORM_PROJECT_NUMBER\";\nexport const SET_FORM_TOOLS = \"SET_FORM_TOOLS\";\nexport const SET_FORM_TEAMMATES = \"SET_FORM_TEAMMATES\";\nexport const SET_FORM_TEAM_MEMBER_ACCOUNTS = \"SET_FORM_TEAM_MEMBER_ACCOUNTS\";\n\nexport const CLEAR_FORM = 'CLEAR_FORM';","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_WEBSITE_LINK,\n  SET_REPOSITORY_LINK,\n  SET_LINKEDIN_LINK\n} from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case SET_WEBSITE_LINK:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          website: payload\n        }\n      }\n    case SET_REPOSITORY_LINK:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          repository: payload\n        }\n      }\n    case SET_LINKEDIN_LINK:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          linkedin: payload\n        }\n      }\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import {\n    SET_FORM_DATA,\n    SET_FORM_TEAMMATES,\n    SET_FORM_TITLE,\n    SET_FORM_TEAM_NAME,\n    SET_FORM_SELECTED_COHORT,\n    SET_FORM_PROJECT_NUMBER,\n    SET_FORM_DESCRIPTION,\n    SET_FORM_FEATURE,\n    SET_FORM_IMAGE,\n    SET_FORM_REPO_LINK,\n    SET_FORM_WEBSITE_LINK,\n    SET_FORM_LANGUAGES,\n    SET_FORM_FRAMEWORK,\n    SET_FORM_BACKEND,\n    SET_FORM_TOOLS,\n    SET_FORM_TEAM_MEMBER_ACCOUNTS,\n    CLEAR_FORM\n} from '../actions/types';\n\nconst initialState = {\n    data: {\n        name_team_member: [],\n        project_name: '',\n        team_name: '',\n        cohort_num: 'Cohort 1',\n        project_num: 'Project 1 (Online Resume)',\n        description: '',\n        key_feature: [],\n        screenshot: [],\n        screenshot_name: '',\n        repository: '',\n        website_link: '',\n        language: [],\n        framework: [],\n        database: [],\n        extra_tools: [],\n        team_member_accounts: []\n    }\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_FORM_DATA:\n            return {\n                ...state,\n                data: action.payload\n            };\n        case SET_FORM_TEAMMATES:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    name_team_member: action.payload\n                }\n            }\n        case SET_FORM_TITLE:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    project_name: action.payload\n                }\n            }\n        case SET_FORM_TEAM_NAME:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    team_name: action.payload\n                }\n            }\n        case SET_FORM_SELECTED_COHORT:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    cohort_num: action.payload\n                }\n            }\n        case SET_FORM_PROJECT_NUMBER:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    project_num: action.payload\n                }\n            }\n        case SET_FORM_DESCRIPTION:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    description: action.payload\n                }\n            }\n        case SET_FORM_FEATURE:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    key_feature: action.payload\n                }\n            }\n        case SET_FORM_IMAGE:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    screenshot: action.payload,\n                    screenshot_name: action.payload[0].name\n                }\n            }\n        case SET_FORM_REPO_LINK:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    repository: action.payload\n                }\n            }\n        case SET_FORM_WEBSITE_LINK:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    website_link: action.payload\n                }\n            }\n        case SET_FORM_LANGUAGES:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    language: action.payload\n                }\n            }\n        case SET_FORM_FRAMEWORK:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    framework: action.payload\n                }\n            }\n        case SET_FORM_BACKEND:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    database: action.payload\n                }\n            }\n        case SET_FORM_TOOLS:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    extra_tool: action.payload\n                }\n            }\n        case SET_FORM_TEAM_MEMBER_ACCOUNTS:\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    team_member_accounts: action.payload\n                }\n            }\n        case CLEAR_FORM:\n            return initialState;\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport message from \"./message\";\nimport form from './form';\n\nexport default combineReducers({\n  auth,\n  message,\n  form\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/EvolveUlog.7ea7b14b.jpg\";","import styled from \"styled-components\"\nimport tw from \"twin.macro\"\n\nconst StyledForm = styled.main.attrs({\n  className: \"flex flex-col h-screen justify-center items-center bg-gray-100\",\n})`\n  & {\n    form {\n      ${tw`bg-white text-center rounded py-8 px-5 shadow max-w-xs`}\n    }\n    input {\n      ${tw`border-gray-300 mb-4 w-full border-solid border rounded py-2 px-4`}\n    }\n    button {\n      \n      ${tw`  bg-white text-green-400 border-2 m-5 border-green-400 py-1 px-8 rounded-full hover:text-white hover:bg-green-400 focus:outline-none focus:shadow-outline`}\n    }\n    \n    h1 {\n      font-size: 24px;\n      font-weight: inherit;\n    }\n    \n  }\n`\nexport default StyledForm","export const config = {\n    BACKEND: {\n        URL: (process.env.NODE_ENV !== \"production\") ? \"http://localhost:8383\" : ''\n    }\n}\n\n","import axios from \"axios\";\nimport { config } from '../config/config';\nconst API_URL = `${config.BACKEND.URL}/api/auth/`;\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", { username, password })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password, roles) {\n\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n      roles\n    });\n  }\n}\n\nexport default new AuthService();\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n  SET_WEBSITE_LINK,\n  SET_REPOSITORY_LINK,\n  SET_LINKEDIN_LINK\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\"\n\nexport const setWebsiteStore = (payload) => ({ type: SET_WEBSITE_LINK, payload });\nexport const setRepositoryStore = payload => ({ type: SET_REPOSITORY_LINK, payload });\nexport const setLinkedInStore = payload => ({ type: SET_LINKEDIN_LINK, payload });\n\nexport const register = (username, email, password, roles) => (dispatch) => {\n  console.log('roles: ', roles)\n  return AuthService.register(username, email, password, roles).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const login = (username, password) => (dispatch) => {\n  return AuthService.login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import React, { Component } from \"react\";\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport StyledForm from './StyleForm/StyledForm';\nimport { connect } from \"react-redux\";\nimport { login } from '../../actions/auth';\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nclass Login extends Component {\n  constructor(props) {      // Initialize the this.state object\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.handleClickRegister = this.handleClickRegister.bind(this)\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleClickRegister(e) {\n    e.preventDefault();\n    const { history } = this.props;\n    if (history) history.push('/register')\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      loading: true,\n    });\n\n    this.form.validateAll();\n\n    const { dispatch, history } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      dispatch(login(this.state.username, this.state.password))   // sends this.state.username into the login 'action' of Redux\n        .then(() => {\n         this.context.history.push(\"/dashboard\");      // Takes you back to your previous URL\n          window.location.reload();        // Refreshes current page\n        })\n        .catch(() => {\n          this.setState({\n            loading: false\n          });\n        });\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { isLoggedIn, message, history } = this.props;\n\n    if (isLoggedIn) {\n      return <Redirect to=\"/register\" />;\n    }\n\n    return (\n      <div>\n        <div>\n\n          <StyledForm>\n\n            <h1 className=\"font-italic w-25 p-3\">Sign In</h1>\n            <Form\n              onSubmit={this.handleLogin}\n              ref={(c) => {\n                this.form = c;\n              }}\n            >\n              <div >\n\n                <Input\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"name\"\n                  value={this.state.username}\n                  onChange={this.onChangeUsername}\n                  validations={[required]}\n                />\n              </div>\n\n              <div >\n\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChangePassword}\n                  validations={[required]}\n                />\n              </div>\n\n              <div >\n                <button\n                  disabled={this.state.loading}\n                >\n                  {this.state.loading && (\n                    <span></span>\n                  )}\n                  <span>Login</span>\n                </button>\n              </div>\n\n              {message && (\n                <div >\n                  <div role=\"alert\">\n                    {message}\n                  </div>\n                </div>\n              )}\n              <CheckButton\n                style={{ display: \"none\" }}\n                ref={(c) => {\n                  this.checkBtn = c;\n                }}\n              />\n              {/* {history && <button onClick={this.handleClickRegister}>Register</button>} */}\n            </Form>\n\n          </StyledForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { isLoggedIn } = state.auth;\n  const { message } = state.message;\n  return {\n    isLoggedIn,\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport StyledForm from './StyleForm/StyledForm'\nimport { connect } from \"react-redux\";\nimport { register } from \"../../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      studentRol: '',\n      adminRol: '',\n      roles: [],\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  getCheckboxValueAdmin(e) {\n    let valcheck = e.target.checked\n    console.log(valcheck)\n\n    if (valcheck)\n\n      this.setState({ adminRol: \"admin\" })\n\n\n  }\n  getChckeboxValueStudent(e) {\n    let valcheck = e.target.checked\n    console.log(valcheck)\n    if (valcheck === true) {\n\n      this.setState({ studentRol: \"student\" })\n    }\n\n  }\n\n  async handleRegister(e) {\n    e.preventDefault();\n\n\n    if (this.state.adminRol.length && this.state.studentRol.length) {\n      console.log(\"value of admin t\" + this.state.adminRol)\n      console.log(\"value of student\" + this.state.studentRol)\n      // this.state.roles=[\"admin\",\"student\"]\n      await this.setState({ roles: [\"admin\", \"student\"] })\n    } else {\n      if (this.state.adminRol.length) {\n        // this.state.roles = [\"admin\"]\n        await this.setState({ roles: [\"admin\"] })\n      } else {\n        if (this.state.studentRol.length)\n          // this.state.roles = [\"student\"]\n\n          await this.setState({ roles: [\"student\"] })\n      }\n    }\n    console.log('student: ', this.state)\n    this.setState({\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n\n    if (this.checkBtn.context._errors.length === 0) {\n      this.props\n        .dispatch(\n\n          register(this.state.username, this.state.email, this.state.password, this.state.roles)\n        )\n        .then(() => {\n          this.setState({\n            successful: true,\n          });\n        })\n        .catch(() => {\n          this.setState({\n            successful: false,\n          });\n        });\n    }\n  }\n\n  render() {\n    const { message } = this.props;\n\n    return (\n\n\n\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <StyledForm>\n            <h1 className=\"font-italic w-25 p-3\">Create Account</h1>\n            <Form className=\"shadow-lg p-3 mb-5 bg-white rounded\"\n              onSubmit={this.handleRegister}\n              ref={(c) => {\n                this.form = c;\n              }}\n            >\n              {!this.state.successful && (\n                <div>\n                  <div className=\"form-group\">\n\n                    <Input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"username\"\n                      placeholder=\"Username\"\n                      value={this.state.username}\n                      onChange={this.onChangeUsername}\n                      validations={[required, vusername]}\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n\n                    <Input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"email\"\n                      placeholder=\"email\"\n                      value={this.state.email}\n                      onChange={this.onChangeEmail}\n                      validations={[required, email]}\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n\n                    <Input\n                      type=\"password\"\n                      className=\"form-control\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                      onChange={this.onChangePassword}\n                      validations={[required, vpassword]}\n                    />\n                  </div>\n                  <div className=\"formregister\">\n                    <span>Admin</span> <input onClick={this.getCheckboxValueAdmin.bind(this)} type=\"checkbox\" value=\"Text\" />\n                    <span>Student</span> <input onClick={this.getChckeboxValueStudent.bind(this)} type=\"checkbox\" value=\"Text\" />\n\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                  </div>\n                </div>\n              )}\n\n              {message && (\n                <div className=\"form-group\">\n                  <div className={this.state.successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\n                    {message}\n                  </div>\n                </div>\n              )}\n              <CheckButton\n                style={{ display: \"none\" }}\n                ref={(c) => {\n                  this.checkBtn = c;\n                }}\n              />\n            </Form>\n          </StyledForm>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { message } = state.message;\n  return {\n    message,\n  };\n}\n\nexport default connect(mapStateToProps)(Register);\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nclass Profile extends Component {\n\n  render() {\n    const { user: currentUser } = this.props;\n\n    if (!currentUser) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong> {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong> {currentUser.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.accessToken) {\n    // For Spring Boot back-end\n    // return { Authorization: \"Bearer \" + user.accessToken };\n\n    // for Node.js Express back-end\n    return { \"x-access-token\": user.accessToken };\n  } else {\n    return {};\n  }\n}\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { config } from '../config/config';\n// Just for test purposes\nconst API_URL = `${config.BACKEND.URL}/api/test/`;\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + \"all\");\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + \"user\", { headers: authHeader() });\n  }\n\n  // Just for test purposes\n  getAdminBoard() {\n    return axios.get(API_URL + \"mod\", { headers: authHeader() });\n  }\n\n  getStudentBoard() {\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\n// For seeing the role/profile of each user. Not currently used\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\nexport default class Admin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdmin().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\nexport default class Student extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdmin().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport logo from '../../images/EvolveUlog.jpg';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\nimport \"../home/tailwind_built.css\";\n\n\nconst Navbar = () => {\n  let location = useLocation();\n  let pathname = location.pathname;\n  let currentUser = useSelector((redux) => redux.auth.user);    // only updates value of currentUser when redux.auth changes\n  let dispatch = useDispatch();\n\n  const handleLogOut = () => dispatch(logout());\n\n  return (\n\n    <div>\n      <div className=\"flex flex-row justify-between items-center  mt-8\">\n\n        <img src={logo} alt=\"Logo\" className=\"w-36 md:w-48 lg:w-56\" />\n\n        {![\"/\", \"/catalog\"].includes(pathname) && (\n          <div className=\"font-600 uppercase text-lg\">\n            <Link to=\"/\">Return to Catalog</Link>\n          </div>\n        )}\n\n        {/* Show appropriate button depending on whether currentUser is defined */}\n        {currentUser ? (\n          <div className=\"w-36 md:w-48 xl:w-64 inline flex \">\n            {/* <Link className=\"loginLink\" to=\"/signout\">Sign Out</Link > */}\n            {\n              pathname !== '/dashboard' ? <Link to='/dashboard'\n                className=\"middleLink\" >\n                Dashboard\n            </Link> : null\n            }\n            <a href=\"/catalog\" className=\"loginLink\" onClick={handleLogOut}>\n              Log Out\n            </a>\n          </div>\n        ) : (\n          <div className=\"w-36 md:w-48 xl:w-64\">\n            <Link className=\"loginLink\" to=\"/login\">\n              Student Login\n            </Link>\n          </div>\n        )}\n\n      </div>\n    </div>\n  )\n}\n\nexport default Navbar","\nimport React from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\n\nfunction ProjectListing(props) {\n  let currentUser = useSelector((redux) => redux.auth.user);\n  console.log('currentUser:', currentUser)\n  const location = useLocation()\n  const history = useHistory();\n\n  const onDeleteProject = () => {\n    fetch(`http://localhost:8383/api/project/${props.projectData._id}`, {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then(res => res.json())\n      .then(body => history.go(0))//reload page after delete of the project\n      .catch(err => console.log('Cannot write on the server', err))\n  }\n  const onEditProject = () => {\n    history.push({\n      pathname: '/edit',\n      state: { project: props.projectData }\n    })\n\n  }\n\n  const separateNamesByComma = props.projectData.name_team_member.map((name, index) => {\n    if (index >= props.projectData.name_team_member.length - 1) {\n      return name\n    }\n    else {\n      return name.concat(\", \")\n    }\n  })\n\n  const buttonDelete = () => {\n    return (\n      <div>\n        <a className=\" md:block  w-1/12\">\n          <button className=\"px-3 pt-0.5  text-xs md:text-xs lg:text-sm  rounded shadow-sm  border border-gray-600\n                     bg-gray-200 hover:bg-white transition duration-300\"  onClick={onDeleteProject} >\n            Delete\n          </button>\n        </a>\n      </div>\n    )\n  }\n\n  const buttonEdit = () => {\n    return (\n      <div>\n        <a className=\" md:block  w-1/12\">\n          <button className=\"px-5 pt-0 text-xs md:text-xs lg:text-sm  rounded shadow-sm  border border-gray-600\n                     bg-gray-200 hover:bg-white transition duration-300\"  onClick={onEditProject} >\n            Edit\n          </button>\n        </a>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div>\n        <div className=\"md:tracking-wide\">\n          <div className=\"flex flex-row items-baseline  mb-2 md:mb-3\">\n            <div className=\"w-2/12 md:w-1/12  pl-5\">\n              {props.projectData.cohort_num[7]}\n            </div>\n\n            <div className=\"w-5/12 md:w-4/12\">\n              <a className=\"border-b border-dotted border-gray-600\" href=\"/#\">\n                {props.projectData.project_name}\n              </a>\n            </div>\n\n            <div className=\"w-5/12 md:w-6/12  pl-2\">\n              {separateNamesByComma}\n            </div>\n\n            <div>\n              <Link to={{\n                pathname: '/details',\n                state: {\n                  fromNotifications: props.projectData._id\n                }\n              }}\n                className=\"px-2 py-1  text-xs md:text-xs lg:text-sm  rounded shadow-sm  border border-gray-600\n                     bg-gray-200 hover:bg-white transition duration-300\"> Details </Link>\n\n              {location.pathname === '/dashboard' && currentUser?.roles?.includes(\"ROLE_ADMIN\") ? buttonDelete() : ''}\n              {location.pathname === '/dashboard' && currentUser?.roles?.includes(\"ROLE_STUDENT\") ? buttonEdit() : ''}\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProjectListing;","import React from 'react'\nimport ProjectListing from './ProjectListing'\n\n\nconst GroupedByProjectNum = (props) => {\n\n  const renderedList = props.projectData.map(item => {\n    return <ProjectListing projectData={item} key={item._id} />\n  })\n\n\n  return (\n    <>\n      {/* <!-- Container for List section  --> */}\n      <div className=\"mt-8 px-3\">\n        <div className=\"h2  text-md md:text-md lg:text-lg  text-evu-blue  mt-10 mb-2 md:mb-3\">\n          {/* //Show the project number for the section coming */}\n          {props.projectData[0].project_num}\n        </div>\n\n        <div className=\"h2 flex flex-row justify-left items-baseline  mb-3 md:mb-4\">\n          <div className=\"w-2/12 md:w-1/12\">Cohort#</div>\n          <div className=\"w-5/12 md:w-4/12\">Project Title</div>\n          <div className=\"w-5/12 pl-2\">Team Members</div>\n        </div>\n\n        {renderedList}\n\n      </div>\n    </>\n  );\n}\n\nexport default GroupedByProjectNum\n\n","import React from 'react'\nimport GroupedByProjectNum from './GroupedByProjectNum'\n\n\nconst CatalogList = (props) => {\n\n   var desiredProjectNumberOrder = props.desiredProjectNumberOrder\n\n   // Output the project data, grouped by project number (in the sequence defined by desiredProjectNumberOrder)\n   const groupedProjectsArray = desiredProjectNumberOrder.map(item => {\n      let newArray = []\n\n      props.projectData.map((object) => {\n         if (object.project_num === item) {\n            newArray.push(object);\n         }\n      });\n\n      if (newArray.length) {\n         return <GroupedByProjectNum\n            projectData={newArray}\n            key={newArray[0]._id}\n            id={newArray[0]._id}\n         />\n      }\n\n   })\n\n   if (groupedProjectsArray.length) {\n      return <>{groupedProjectsArray}</>;\n   } else {\n      return <div></div>\n   }\n}\n\nexport default CatalogList","import React, { useEffect } from 'react';\n\nconst CheckboxSection = (props) => {\n\n\n   useEffect(() => {\n      // console.log('clear options: ')\n      const elements = document.querySelectorAll('input')\n      for (let i = 0; i < elements.length; i++) {\n         console.log(elements[i].checked)\n         elements[i].checked = false\n      }\n\n   }, [props.clearOptions])\n   return (\n\n      // Container for Checkbox controls\n      <div className=\"flex flex-row flex-wrap justify-around align-center\">\n\n         {/* Languages */}\n         <form id=\"section-checkbox-language\" className=\"md:w-64 lg:w-72 px-3 pb-4\">\n            <div className=\"flex flex-col md:flex-row flex-wrap\">\n\n               <div id=\"section-languages\" className=\"md:w-64 lg:w-72 px-3 pb-4\" >\n\n                  <label className=\"pl-6 pb-2\">Languages</label><br />\n                  <input\n                     id=\"checkbox-html\"\n                     type=\"checkbox\"\n                     value=\"HTML/CSS\"\n                     className=\"mx-2\"\n                     onChange={props.handleChangeCheckbox}\n                  />\n                  <label htmlFor=\"checkbox-html\" className=\"text-gray-700\">HTML/CSS</label>\n                  <br />\n\n                  <input\n                     id=\"checkbox-js\"\n                     type=\"checkbox\"\n                     value=\"Javascript\"\n                     className=\"mx-2\"\n                     onChange={props.handleChangeCheckbox}\n                  />\n                  <label htmlFor=\"checkbox-js\" className=\"text-gray-700\">Javascript</label>\n                  <br />\n\n                  <input\n                     id=\"checkbox-python\"\n                     type=\"checkbox\"\n                     value=\"Python\"\n                     className=\"mx-2\"\n                     onChange={props.handleChangeCheckbox}\n                  />\n                  <label htmlFor=\"checkbox-python\" className=\"text-gray-700\">Python</label>\n\n               </div>\n            </div>\n         </form>\n\n\n         {/* Frontend */}\n         <form id=\"section-checkbox-frontend\" className=\"md:w-64 lg:w-72 px-3 pb-4\">\n            <div className=\"flex flex-col md:flex-row flex-wrap\">\n\n               <div id=\"section-framework\" className=\"md:w-64 lg:w-72 px-3 pb-4\" >\n\n                  <label className=\"text-gray-700\">Front-End</label>\n                  <br />\n\n                  <input\n                     id=\"checkbox-vuejs\"\n                     type=\"checkbox\"\n                     value=\"Vue.js\"\n                     className=\"mx-2\"\n                     onChange={props.handleChangeCheckbox}\n                  />\n                  <label htmlFor=\"checkbox-vuejs\" className=\"text-gray-700\">Vue.js</label>\n                  <br />\n\n                  <input\n                     id=\"checkbox-react\"\n                     type=\"checkbox\"\n                     value=\"React.js\"\n                     className=\"mx-2\"\n                     onChange={props.handleChangeCheckbox}\n                  />\n                  <label className=\"text-gray-700\">React.js</label>\n                  <br />\n\n                  <input\n                     id=\"checkbox-bootstrap\"\n                     type=\"checkbox\"\n                     value=\"Bootstrap\"\n                     className=\"mx-2\"\n                     onChange={props.handleChangeCheckbox}\n                  />\n                  <label htmlFor=\"checkbox-bootstrap\" className=\"text-gray-700\">Bootstrap</label>\n                  <br />\n\n                  <input\n                     id=\"checkbox-redux\"\n                     type=\"checkbox\"\n                     value=\"Redux\"\n                     className=\"mx-2\"\n                     onChange={props.handleChangeCheckbox}\n                  />\n                  <label htmlFor=\"checkbox-redux\" className=\"text-gray-700\">Redux</label>\n               </div>\n            </div>\n         </form>\n\n\n         <form id=\"section-checkbox-backend\" className=\"md:w-64 lg:w-72 px-3 pb-4\">\n            <div id=\"section-backend\" className=\"flex-auto\">\n               <label className=\"text-gray-700\">Back-End</label>\n               <br />\n               <input\n                  id=\"checkbox-nodejs\"\n                  type=\"checkbox\"\n                  value=\"Node.js\"\n                  className=\"mx-2\"\n                  onChange={props.handleChangeCheckbox}\n               />\n               <label htmlFor=\"checkbox-nodejs\" className=\"text-gray-700\">Node.js</label>\n               <br />\n\n               <input\n                  id=\"checkbox-sql\"\n                  type=\"checkbox\"\n                  value=\"SQL\"\n                  className=\"mx-2\"\n                  onChange={props.handleChangeCheckbox}\n               />\n               <label htmlFor=\"checkbox-sql\" className=\"text-gray-700\">SQL</label>\n               <br />\n\n               <input\n                  id=\"checkbox-nosql\"\n                  type=\"checkbox\"\n                  value=\"NoSQL\"\n                  className=\"mx-2\"\n                  onChange={props.handleChangeCheckbox}\n               />\n               <label htmlFor=\"checkbox-nosql\" className=\"text-gray-700\">NoSQL</label>\n               <br />\n\n               <input\n                  id=\"checkbox-express\"\n                  type=\"checkbox\"\n                  value=\"Express\"\n                  className=\"mx-2\"\n                  onChange={props.handleChangeCheckbox}\n               />\n               <label htmlFor=\"checkbox-express\" className=\"text-gray-700\">Express</label>\n\n               <br />\n               <input\n                  id=\"checkbox-flask\"\n                  type=\"checkbox\"\n                  value=\"Flask\"\n                  className=\"mx-2\"\n                  onChange={props.handleChangeCheckbox}\n               />\n\n               <label htmlFor=\"checkbox-flask\" className=\"text-gray-700\">Flask</label>\n            </div>\n\n         </form>\n      </div>\n   )\n\n};\n\nexport default CheckboxSection;","import React, { useState, useEffect } from 'react'\n\n\n\nconst PulldownFilters = (props) => {\n    const [listOfOptions, setListOfOptions] = useState({\n        cohort: \"\",\n        project: \"\",\n        student: \"\"\n    })\n\n    let renderedCohortList = []\n    if (props.cohortList) {\n        renderedCohortList = props.cohortList.map((item, index) => {\n            return (\n                <option\n                    value={item}\n                    key={item + index}\n\n                >\n                    {item}</option>\n            )\n        })\n    }\n    let renderedStudentList = []\n    if (props.studentList) {\n        renderedStudentList = props.studentList.map((item, index) => {\n            return (\n                <option\n                    value={item}\n                    key={item + index}\n\n                >\n                    {item}</option>\n            )\n        })\n    }\n    let renderedProjectNumberList = []\n    if (props.desiredProjectNumOrder) {\n        renderedProjectNumberList = props.desiredProjectNumOrder.map((item, index) => {\n            return (\n                <option\n                    value={item}\n                    key={item + index}\n\n                >\n                    {item}</option>\n            )\n        })\n    }\n    useEffect(() => {\n        console.log('listOfOptions: ', listOfOptions)\n        props.listOfOptions(listOfOptions)\n\n    }, [listOfOptions])\n    useEffect(() => {\n        setListOfOptions({\n            cohort: \"\",\n            project: \"\",\n            student: \"\"\n        })\n    }, [props.clearOptions])\n\n\n    return (\n        <>\n            {/* <!-- Container for Upper filter controls --> */}\n            < div className=\"flex flex-row flex-wrap justify-around align-baseline  mb-5  bg-cover\" >\n\n                {/* <!-- Need to pass a default value if nothing is selected. Nice to format the option text but Optgroup didn't work.  --> */}\n                < span className=\"mr-6 pl-1 py-1 h-7\" >\n                    <select\n                        id=\"cohort\"\n                        name=\"cohort\"\n                        value={listOfOptions.cohort}\n                        onChange={e => setListOfOptions({ ...listOfOptions, cohort: (e.target.value !== 'None') ? e.target.value : '' })}\n                    >\n                        <option value=\"None\">Cohort Number</option>\n                        {renderedCohortList}\n                    </select>\n                </span >\n\n                {/*<!-- Need to pass a default value if nothing is selected. Nice to format the option text but Optgroup didn't work  --> */}\n                < select id=\"project_num\" name=\"project_num\" className=\"mr-6 pl-1 pr-2 py-1 w-40 h-7\"\n                    onChange={e => setListOfOptions({ ...listOfOptions, project: (e.target.value !== 'None') ? e.target.value : '' })}\n                    value={listOfOptions.project}\n                >\n\n                    <option\n                        value=\"None\"\n                    >Project Number</option>\n                    {renderedProjectNumberList}\n                </select >\n                {/* <!-- Need to pass a default value if nothing is selected. Nice to format the option text but Optgroup didn't work  --> */}\n                < select id=\"name\" name=\"name\" className=\"mr-6 pl-1 pr-2 py-1 h-7 w-40\"\n                    onChange={e => setListOfOptions({ ...listOfOptions, student: (e.target.value !== 'None') ? e.target.value : '' })}\n                    value={listOfOptions.student}\n                >\n                    <option value=\"None\">Student Name</option>\n                    {renderedStudentList}\n                </select >\n\n                {/* <!-- How to add a collective Submit button?  --> */}\n                < div className=\"pl-2 py-1\" >\n                    {/* <!-- action=\"/action_page.php\" --> */}\n                    < div className=\"flex flex-row flex-no-wrap\" >\n                        <label htmlFor=\"keyword\" className=\"pr-2\">Keyword: </label>\n                        <input type=\"text\" id=\"keyword\" name=\"keyword\" className=\"bg-gray-200 rounded px-2 w-32\" />\n                    </div >\n\n                </div >\n            </div>\n        </>\n\n    )\n\n}\n\n\nexport default PulldownFilters;\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport CatalogList from './CatalogList';\nimport CheckboxSection from './CheckboxSection'\nimport PulldownFilters from './PulldownFilters'\nimport '../../tailwind.output.css';\nimport { Link } from 'react-router-dom';\nimport { config } from '../../config/config';\n\nconst Home = () => {\n   const url = config.BACKEND.URL;\n   const [projectDetails, setprojectDetails] = useState([]);\n   const [desiredProjectNumOrder, setDesiredProjectNumOrder] = useState([]);\n   const [languages, setLanguages] = useState([]);\n   const [frontend, setFrontend] = useState([]);\n   const [backend, setBackend] = useState([]);\n   const [cohortList, setCohortList] = useState([]);\n   const [studentList, setStudentList] = useState([]);\n   const [clearUpOptions, setClearUpOptions] = useState(false)\n   const [listOfOptions, setListOfOptions] = useState({\n      cohort: \"\",\n      project: \"\",\n      student: \"\"\n   })\n\n   useEffect(() => {\n      console.log(\"languages: \", languages);\n      console.log(\"frontend: \", frontend);\n      console.log(\"backend: \", backend);\n      console.log('listOfOptions, ', listOfOptions)\n   }, [languages, frontend, backend, listOfOptions])     // so run this whenever languages, frontend or backend states change?\n\n\n   useEffect(() => {\n      fetch(`${url}/api/project`)\n         .then((res) => res.json())\n         .then((data) => setprojectDetails(data))\n         .catch((err) => console.log(\"Cannot reach the server\", err));\n   }, []);\n\n   useEffect(() => {\n      fetch(`${url}/api/init/projects`)\n         .then((res) => res.json())\n         .then((data) => {\n            buildDesiredProjectNumOrder(data);\n            // console.log(\"Home.js: Init projects data =\", data);\n         })\n         .catch((err) => console.log(\"Cannot reach the server\", err));\n   }, []);\n\n   useEffect(() => {\n      fetch(`${url}/api/init/cohorts`)\n         .then((res) => res.json())\n         .then((data) => {\n            buildCohortList(data);\n            // console.log(\"Home.js: Init cohorts data =\", data);\n         })\n         .catch((err) => console.log(\"Cannot reach the server\", err));\n   }, []);\n\n   useEffect(() => {\n      fetch(`${url}/api/init/students`)\n         .then((res) => res.json())\n         .then((data) => {\n            buildStudentList(data);\n            // console.log(\"Home.js: Init students data =\", data);\n         })\n         .catch((err) => console.log(\"Cannot reach the server\", err));\n   }, []);\n\n\n   const buildDesiredProjectNumOrder = (dataFromServer) => {\n      let arrayOfProjectNum = [];\n      dataFromServer.map((obj) => {             // Should this be .forEach instead of .map?\n         arrayOfProjectNum.push(obj.name);      // .map expects a return value from this function\n      });\n      // console.log(\"projects obj from server\", arrayOfProjectNum);\n      setDesiredProjectNumOrder(arrayOfProjectNum);\n   };\n\n   const buildCohortList = (dataFromServer) => {\n      let arrayOfCohortNum = [];\n      dataFromServer.map((obj) => {\n         arrayOfCohortNum.push(obj.name);\n      });\n      // console.log(\"Cohorts obj from server:\", arrayOfCohortNum);\n      setCohortList(arrayOfCohortNum);\n   };\n\n   const buildStudentList = (dataFromServer) => {\n      let arrayOfStudentNames = [];\n      dataFromServer.map((obj) => {\n         arrayOfStudentNames.push(obj.name);\n      });\n      // console.log(\"Cohorts obj from server:\", arrayOfStudentNames);\n      setStudentList(arrayOfStudentNames);\n   };\n\n\n   const onChangeCheckbox = (event) => {\n      let array = [];\n      console.log(\"event.target.value=\", event.target.value);\n      const value = event.target.value\n\n      const parentId = document.querySelector(\"#\" + event.target.id).parentNode.id;\n      // console.log(\"parentId=\", parentId);\n      const key = parentId.slice(8); // removes \"section-\" from event object's parent object's id\n\n      let index = -1;\n\n      switch (key) {\n         case \"languages\":\n            array = [...languages]; // makes a copy of the languages array\n            index = array.indexOf(value);\n\n            if (index === -1) {\n               array.push(value); // When box is checked, adds this languages to the array\n               setLanguages(array);\n            } else {\n               array.splice(index, 1); // for uncheck, removes this language from the array\n               setLanguages(array);\n            }\n            break;\n         case \"framework\":\n            array = [...frontend];\n            index = array.indexOf(value);\n            if (index === -1) {\n               array.push(value);\n               setFrontend(array);\n            } else {\n               array.splice(index, 1);\n               setFrontend(array);\n            }\n            break;\n         case \"backend\":\n            array = [...backend];\n            index = array.indexOf(value);\n            if (index === -1) {\n               array.push(value);\n               setBackend(array);\n            } else {\n               array.splice(index, 1);\n               setBackend(array);\n            }\n            break;\n         default:\n            break;\n      }\n      // console.log(\"Amended array is:\", array);\n      // console.log(\"\");\n   };\n\n   useEffect(() => {\n      const cohortURL = `cohort=${listOfOptions.cohort}`\n      const projectURL = `projectnum=${listOfOptions.project}`\n      const nameURL = `name=${listOfOptions.student}`\n      let languagesURL = ''\n      languages.map(language => languagesURL = languagesURL + 'languages=' + language + '&')\n      let frontendUrl = ''\n      frontend.map(tool => frontendUrl = frontendUrl + 'frontend=' + tool + '&')\n      let backendURL = ''\n      backend.map(tool => backendURL = backendURL + 'backend=' + tool + '&')\n\n      fetch(`${url}/api/project?${cohortURL}&${projectURL}&${nameURL}&${languagesURL}${frontendUrl}${backendURL}`)\n         .then((res) => res.json())\n         .then((data) => setprojectDetails(data))\n         .catch((err) => console.log(\"Cannot reach the server\", err))\n\n   }, [listOfOptions, languages, frontend, backend])\n\n   const handleClearOptions = () => {\n      setClearUpOptions(!clearUpOptions)\n      setFrontend([])\n      setBackend([])\n      setLanguages([])\n   }\n   return (\n      <div>\n\n         <div className=\"bold text-evu-lt-blue  text-4xl md:text-5xl  mt-12 text-center\">\n            <Link to=\"/\">Catalog of Student Projects </Link></div>\n         <br />\n         <PulldownFilters\n            desiredProjectNumOrder={desiredProjectNumOrder}\n            cohortList={cohortList}\n            studentList={studentList}\n            listOfOptions={data => setListOfOptions(data)}\n            clearOptions={clearUpOptions}\n         />\n\n         <hr className=\"h-1 border-gray-400\" />\n\n         <CheckboxSection handleChangeCheckbox={onChangeCheckbox} clearOptions={clearUpOptions} />\n         <hr className=\"h-1 border-gray-400\" />\n         <div className=\"grid\" >\n            <button className=\"px-3 pt-0.5  text-xs md:text-xs lg:text-sm  rounded shadow-sm  border border-gray-600c \n            place-self-center  bg-gray-200 hover:bg-white transition duration-300\"  onClick={handleClearOptions} >\n               Clear Options\n            </button>\n         </div>\n\n         <hr className=\"h-1 border-gray-400\" />\n\n         <CatalogList projectData={projectDetails} desiredProjectNumberOrder={desiredProjectNumOrder} />\n\n         {/* {console.log(\"Home.js: projectData = \", projectDetails)} */}\n         {/* {console.log(\"Home.js: desiredProjectNumOrder = \",desiredProjectNumOrder)} */}\n      </div >\n   );\n\n};\n\nexport default Home;","import React, { useEffect } from 'react'\n\nexport default function Description(props) {\n\n    return (\n\n        <div className=\"mb-8 min-h-1/4\">\n            <div className=\"\">\n                <h3 className=\"\">{props.projectNum}</h3>\n            </div>\n            <div className=\"\">\n                <h3 className=\"\">{props.cohortNum}</h3>\n\n            </div>\n            <hr></hr>\n            <div className=\"\">\n                <h3 className=\"mb-2\">Project Description</h3>\n                <p className=\"mb-2 mx-3\">{props.description}</p>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport './details.css'\n\nconst TeamMemberName = ({ id, names }) => {\n    let renderedList = []\n    console.log('names: ', names)\n    if (names) {\n        renderedList = names.map((name, index) => {\n            return (\n                <li className=\"\"\n                    key={name.concat(index)}\n                >\n                    <i className=\"\"></i>\n                    {/* <div className=\"\"> */}\n                    <p className=\"\">{name}</p>\n                    {/* </div> */}\n                </li>\n\n            )\n        })\n    }\n\n\n    if (renderedList.length) {\n\n        return (\n            <div className=\"team-member-names\" >\n                <h3>Team Members Names</h3>\n                <ul>\n                    {renderedList}\n                </ul>\n\n            </div>\n        )\n    } else {\n        return <div>Not working</div>\n    }\n\n}\n\nexport default TeamMemberName;\n","import React, { useState, useEffect } from 'react'\n\nexport default function Screenshot(props) {\n    const [screenshotBase64, setScreenshotBase64] = useState()\n    const convertToBase64 = (arrayBuffer) => {\n        let u8 = new Uint8Array(arrayBuffer)\n        let b64encoded = btoa([].reduce.call(new Uint8Array(arrayBuffer), function (p, c) { return p + String.fromCharCode(c) }, ''))\n        // let mimetype = \"image/jpeg\"\n        // return \"data:\" + mimetype + \";base64,\" + b64encoded\n        return b64encoded\n    }\n    useEffect(() => {\n        if (props && props.img) {\n            // console.log('image in screenshot comp', props.img.img.data.data)\n            setScreenshotBase64(convertToBase64(props.img.img.data.data))\n        }\n\n    }, [props.img])\n\n    return (\n        <div className='mt-3 mb-4'>\n            <h3 className=\"\">Screenshot</h3>\n            <img\n                className=\"\"\n                src={`data:image/png;base64,${screenshotBase64}`} />\n\n        </div>\n    )\n}\n","import React from 'react'\n\n// What does this function do?  What is props.accounts from?\nexport default function Link(props) {\n  let renderedList = []\n  console.log()\n  if (props.accounts) {\n\n    renderedList = props.accounts.map((account, index) => {\n      return (\n        <tbody key={index}>\n          <tr>\n            <td data-label=\"Names\">{account.name}</td>\n            <td data-label=\"Github\">{account.github}</td>\n            <td data-label=\"LinkedIn\">{account.linked}</td>\n          </tr>\n        </tbody >\n      );\n    })\n  }\n\n  if (renderedList.length) {\n    return (\n      <div className=\"\">\n        <table className=\"\">\n          <thead>\n            <tr>\n              <th>Names</th>\n              <th>Github</th>\n              <th>Linked In</th>\n            </tr>\n          </thead>\n          {renderedList}\n        </table>\n      </div>\n    );\n  } else {\n    return <div></div>\n  }\n\n}\n\n\n","import React from \"react\";\nimport './details.css'\n\nfunction ListOfThings(props) {\n  // console.log(\"props.list: \", props);\n  let renderedList = [];\n  if (props.list) {\n    renderedList = props.list.map((item, index) => {\n      console.log(item)\n      return (\n        <li key={index} className='list-item'>\n          {item}\n        </li>\n      );\n    });\n  }\n\n  if (renderedList.length) {\n    return (\n      <>\n        <div>\n          <div id=\"container-thing mt-4\" >\n            <h3 className=\"\">{props.label}</h3>\n          </div>\n          <ul id=\"container-list\" className=\"\">\n            {renderedList}\n          </ul>\n        </div>\n      </>\n\n    );\n  } else {\n    return <div></div>;\n  }\n}\nexport default ListOfThings;\n","import styled from \"styled-components\"\nimport tw from \"twin.macro\"\n\nconst DetailsStyled = styled.main.attrs({\n    className: \"\",\n})`\n  & {\n        h1{\n            font-size: 2.4rem;\n        }\n\n        h2{\n            font-size: 2.2rem ;\n        }\n\n        h3{\n            font-size: 1.6rem;\n        }\n\n        hr {\n            border: 0;\n            clear:both;\n            display:block;\n            margin: 5% auto;\n            width: 50%;\n            background-color: black;\n            height: 1px;\n        }\n\n        .container {\n            ${tw` w-full bg-gray-100 border-2 `}\n        }\n\n        .project-name{\n            margin: 2% auto;\n        }\n\n        .team-name{\n            margin: 2% auto;\n        }\n\n        .section{\n            margin: 5% auto;\n        }\n\n        .team-member-names{\n            margin: 2% auto;\n\n            ul{\n                display: flex; \n                flex-wrap: wrap;\n                justify-content: space-around;\n            }\n\n            li{\n                font-sized: 1.2rem;\n            }\n\n        }\n        \n  }\n`\nexport default DetailsStyled","import React, { useState, useEffect } from \"react\";\nimport Description from \"./Description\";\nimport TeamMemberName from \"./TeamMemberName\";\nimport Screenshot from \"./Screenshot\";\nimport Link from \"./Link\";\nimport ListOfThings from \"./ListOfThings\";\nimport \"./details.css\";\nimport styled from 'styled-components';\nimport DetailsStyled from './DetailsStyled';\nimport { config } from '../../config/config';\n// Compiled and minified CSS\n\n\nfunction Details(props) {\n  const url = config.BACKEND.URL;\n  const [project, setProject] = useState({});\n  const [screenshot, setScreenshot] = useState()\n\n  // Pulls project data from the API endpoint for this project (I'm guessing)\n  useEffect(() => {\n    const { handle } = props.match.params                   // Braces {} are for array deconstruction\n    const { fromNotifications } = props.location.state // These props come from Link on /src/home/ProjectListing.js \n    if (fromNotifications) {\n      fetch(`${url}/api/project/` + fromNotifications)     // fromNotifications = ID of the project (used in URL)\n        .then((res) => res.json())\n        .then((data) => setProject(data))\n        .catch(err => console.log('The server could not be reach: ', err))\n    }\n  }, []);\n\n\n  useEffect(() => {\n    if (project && project.screenshotId) {\n      console.log('fetch projectid: ', project.screenshotId)\n      fetch(`${url}/api/image/` + project.screenshotId)\n        .then((res) => res.json())\n        .then((data) => {\n          setScreenshot(data)\n          // console.log(data.img.data.data)\n        })\n        .catch(err => console.log('The server could not be reach: ', err))\n    }\n  }, [project])\n\n  // Every time the project changes (load or reload the page) it prints to the console log\n  useEffect(() => {\n    if (project) {\n      console.log(\"project on loading page\", project);\n      console.log()\n    }\n  }, [project]);\n\n\n  return (\n    <DetailsStyled>\n      <ContainerProject className=\"container\">\n        <div className=\"project-name section\">\n          {project.project_name && <h1>\n            <i className=\"\">\n              {project.project_name}\n            </i>\n          </h1>\n          }\n\n        </div>\n        {project.team_name && < div className=\"team-name\">\n          <h3 className=\"\">\n            We are {project.team_name}!\n        </h3>\n        </div>\n        }\n\n        <TeamMemberName\n          className=\"section\"\n          names={project.name_team_member}\n          id={project._id}\n        />\n\n        <Description\n          className=\"section\"\n          description={project.description}\n          projectNum={project.project_num}\n          cohortNum={project.cohort_num}\n        />\n\n        {screenshot ? <Screenshot img={screenshot} /> : <div></div>}\n        {project.language && <>\n          <ListOfThings\n            className=\"section\"\n            list={project.language}\n            label=\"Language\"\n          />\n          <hr></hr>\n        </>\n        }\n        {project.framework && <>\n          <ListOfThings\n            className=\"section\"\n            list={project.framework}\n            label=\"Front End\"\n          />\n          <hr></hr>\n        </>\n        }\n        {project.database && <ListOfThings\n          className=\"section\"\n          list={project.database}\n          label=\"Back End\"\n        />\n        }\n        {project.team_member_accounts &&\n          project.team_member_accounts.length && <Link\n            className=\"section\"\n            accounts={project.team_member_accounts}\n          />\n        }\n      </ContainerProject>\n    </DetailsStyled>\n\n  );\n}\n\nexport default Details;\n\nconst ContainerProject = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align:center;\n  margin: 10px;\n  padding: 5% 5%;\n`\n\n","import {\n    SET_FORM_DATA,\n    SET_FORM_TEAMMATES,\n    SET_FORM_TITLE,\n    SET_FORM_TEAM_NAME,\n    SET_FORM_SELECTED_COHORT,\n    SET_FORM_PROJECT_NUMBER,\n    SET_FORM_DESCRIPTION,\n    SET_FORM_FEATURE,\n    SET_FORM_IMAGE,\n    SET_FORM_REPO_LINK,\n    SET_FORM_WEBSITE_LINK,\n    SET_FORM_LANGUAGES,\n    SET_FORM_FRAMEWORK,\n    SET_FORM_BACKEND,\n    SET_FORM_TOOLS,\n    SET_FORM_TEAM_MEMBER_ACCOUNTS,\n    CLEAR_FORM\n} from './types';\nimport { config } from '../config/config';\n// import { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n\nconst url = config.BACKEND.URL;\n\nexport const setFormData = (payload) => ({ type: SET_FORM_DATA, payload });\nexport const setFormTeammates = (payload) => ({ type: SET_FORM_TEAMMATES, payload });\nexport const setFormTitle = (payload) => ({ type: SET_FORM_TITLE, payload });\nexport const setFormTeamName = (payload) => ({ type: SET_FORM_TEAM_NAME, payload });\nexport const setFormSelectedCohort = (payload) => ({ type: SET_FORM_SELECTED_COHORT, payload });\nexport const setFormProjectNumber = (payload) => ({ type: SET_FORM_PROJECT_NUMBER, payload });\nexport const setFormDescription = (payload) => ({ type: SET_FORM_DESCRIPTION, payload });\nexport const setFormFeature = (payload) => ({ type: SET_FORM_FEATURE, payload });\nexport const setFormImage = (payload) => ({ type: SET_FORM_IMAGE, payload });\nexport const setFormRepoLink = (payload) => ({ type: SET_FORM_REPO_LINK, payload });\nexport const setFormWebsiteLink = (payload) => ({ type: SET_FORM_WEBSITE_LINK, payload });\nexport const setFormLanguages = (payload) => ({ type: SET_FORM_LANGUAGES, payload });\nexport const setFormFramework = (payload) => ({ type: SET_FORM_FRAMEWORK, payload });\nexport const setFormBackend = (payload) => ({ type: SET_FORM_BACKEND, payload });\nexport const setFormTools = (payload) => ({ type: SET_FORM_TOOLS, payload });\nexport const setFormTeamMemberAccounts = (payload) => ({ type: SET_FORM_TEAM_MEMBER_ACCOUNTS, payload });\n\nexport const clearForm = () => ({ type: CLEAR_FORM });\n\nexport const fetchFormData = (projectId) => dispatch => {\n    const location = useHistory();\n    return fetch(`${url}/api/project/${projectId}`)\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data)\n            dispatch({\n                type: SET_FORM_DATA,\n                payload: data\n            })\n            location.push({\n                pathname: 'details',\n                state: {\n                    fromNotifications: data._id\n                }\n            })\n            return Promise.resolve()\n        })\n        .catch(err => console.log('The server could not be reach: ', err))\n}\nconst convertToFormData = (project, currentUser) => {\n    console.log('postFormData project', project)\n    console.log('postFormData currentUser', currentUser)\n    // console.log('postFormData project_name', project.data.screenshot[0].name)\n    let formData = new FormData()\n    //********Image */\n    if (project.data.screenshot && project.data.screenshot.length) {\n        formData.append('name', project.data.screenshot[0].name);\n        formData.append('image', project.data.screenshot[0]);\n    }\n    /*********Rest of the dataf************/\n    formData.append('_id', project.data._id);\n    formData.append('project_name', project.data.project_name);\n    formData.append('description', project.data.description);\n    formData.append('team_name', project.data.team_name);\n    for (let i = 0; i < project.data.key_feature.length; i++) {\n        formData.append('key_feature[]', project.data.key_feature[i]);\n    }\n\n    formData.append('repository', project.data.repository);\n    formData.append('website', project.data.website_link);\n\n    //adding array in formData\n    for (let i = 0; i < project.data.language.length; i++) {\n        // console.log(languages[i])\n        formData.append('language[]', project.data.language[i]);\n    }\n    for (let i = 0; i < project.data.framework.length; i++) {\n        formData.append('framework[]', project.data.framework[i]);\n    }\n    for (let i = 0; i < project.data.database.length; i++) {\n        formData.append('database[]', project.data.database[i]);\n    }\n\n    formData.append('cohort_num', project.data.cohort_num);\n    formData.append('project_num', project.data.project_num);\n    for (let i = 0; i < project.data.extra_tools.length; i++) {\n        formData.append('extra_tools[]', project.data.extra_tools[i]);\n    }\n\n    for (let i = 0; i < project.data.name_team_member.length; i++) {\n        formData.append('name_team_member[]', project.data.name_team_member[i]);\n    }\n    for (let i = 0; i < project.data.team_member_accounts.length; i++) {\n        // console.log(teamMemberAccounts)\n        formData.append('team_member_accounts[]', project.data.team_member_accounts[i]);\n    }\n    formData.append('owner', currentUser.id);\n    return formData;\n}\nexport const postFormData = (project, currentUser) => dispatch => {\n\n    const formData = convertToFormData(project, currentUser)\n    console.log(formData)\n    return fetch(`${url}/api/project/`, {\n        method: 'POST',\n        body: formData\n    })\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data)\n            return Promise.resolve()\n        })\n}\n\nexport const updateFormData = (project, currentUser) => dispatch => {\n\n    const formData = convertToFormData(project, currentUser)\n    console.log(project)\n    console.log('before the edit post', project.data._id)\n    return fetch(`${url}/api/project/${project.data._id}`, {\n        method: 'PUT',\n        body: formData\n    })\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data)\n            return Promise.resolve()\n        })\n}\n\n//catalog_env_var.ods\n//docs&Files/Project-Document","import styled from \"styled-components\"\nimport tw from \"twin.macro\"\n\nconst StyledDashboard = styled.main.attrs({\n  className: \"\",\n})`\n  & {\n    span {\n      ${tw`grid md:grid-cols-10 py-2 items-center`}\n    }\n    input {\n      ${tw`md:col-span-6  bg-gray-200 appearance-none border-2 border-gray-400 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-teal-500`}\n    }\n    label {\n      ${tw`md:col-span-2 text-gray-800  md:text-right mb-1 pr-4`}\n    }\n    button{\n      ${tw`object-right md:col-span-1 mx-8 md:ml-2 md:mr-0 px-1 bg-white text-green-400 border-2 border-green-400 py-1 px-2 ml-2 rounded-full hover:text-white hover:bg-green-400 focus:outline-none focus:shadow-outline`}\n    }\n  \n  }\n`\nexport default StyledDashboard;","import React, { useState, useEffect } from 'react';\nimport StyledInput from './StyledInput';\nimport { config } from '../../config/config';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setWebsiteStore, setRepositoryStore, setLinkedInStore } from '../../actions/auth';\n\nconst url = config.BACKEND.URL;\nfunction Links() {\n    const [website, setWebsite] = useState('');\n    const [websiteUpdated, setWebsiteUpdated] = useState(false);\n    const [repository, setRepository] = useState('');\n    const [repositoryUpdated, setRepositoryUpdated] = useState(false);\n    const [linkedin, setLinkedin] = useState('');\n    const [linkedinUpdated, setLinkedinUpdated] = useState(false);\n    const currentUser = useSelector((redux) => redux.auth.user);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        setWebsite(currentUser.website);\n        setRepository(currentUser.repository);\n        setLinkedin(currentUser.linkedin);\n    }, [])\n    const handleChange = (key, value) => {\n        if (key === 'website') {\n            setWebsite(value);\n            setWebsiteUpdated(true);\n        }\n        else if (key === 'repository') {\n            setRepository(value);\n            setRepositoryUpdated(true);\n        }\n        if (key === 'linkedin') {\n            setLinkedin(value);\n            setLinkedinUpdated(true);\n        }\n    }\n    const updateStore = (key, value) => {\n\n        if (key === 'website') {\n            console.log(key, value)\n            dispatch(setWebsiteStore(value))\n            setWebsiteUpdated(false);\n        }\n        else if (key === 'repository') {\n            dispatch(setRepositoryStore(value));\n            setRepositoryUpdated(false)\n        }\n        else if (key === 'linkedin') {\n            dispatch(setLinkedInStore(value))\n            setLinkedinUpdated(false);\n        }\n    }\n\n    const handleClick = (key, value) => {\n        let dataObj = { key, value };\n        console.log('dataObj:: ', dataObj)\n        fetch(`${url}/api/student/${currentUser.id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            body: JSON.stringify(dataObj)\n        })\n            .then(resp => resp.json())\n            .then(returnedData => {\n                console.log(returnedData);\n                console.log(key, value)\n                updateStore(key, value);\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <StyledInput>\n            <div className='flex flex-col my-2 '>\n                <hr className=\"h-1 border-gray-400 my-4\" />\n                <span >\n                    <label htmlFor='website'>Website:</label>\n                    <input\n                        id=\"website\"\n                        value={website}\n                        onChange={e => handleChange('website', e.target.value)}\n                    />\n                    {websiteUpdated && <button\n                        onClick={e => handleClick('website', website)}\n                    >Update</button>}\n                </span>\n                <span>\n                    <label htmlFor='repository'>Repository:</label>\n                    <input\n                        id='repository'\n                        value={repository}\n                        onChange={e => handleChange('repository', e.target.value)}\n                    />\n                    {repositoryUpdated && <button\n                        onClick={e => handleClick('repository', repository)}\n                    >Update</button>}\n                </span>\n                <span>\n                    <label htmlFor='linkedin' >LinkedIn:</label>\n                    <input\n                        id='linkedin'\n                        value={linkedin}\n                        onChange={e => handleChange('linkedin', e.target.value)}\n                    />\n                    {linkedinUpdated && <button\n                        onClick={e => handleClick('linkedin', linkedin)}\n                    >Update</button>}\n                </span>\n                <hr className=\"h-1 border-gray-400 my-4\" />\n            </div>\n        </StyledInput>\n    )\n}\n\nexport default Links\n","import React, { useState, useEffect } from 'react';\n// import { Redirect } from 'react-router-dom'\nimport CatalogList from '../home/CatalogList';\nimport { useHistory } from 'react-router-dom'\nimport Details from '../details/Details'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearForm } from '../../actions/form';\nimport { config } from '../../config/config';\nimport StyledInput from './StyledInput';\nimport Links from './Links';\n\nconst url = config.BACKEND.URL;\nconst Dashboard = () => {\n\n    const [projectDetails, setprojectDetails] = useState([]);\n    const [desiredProjectNumOrder, setDesiredProjectNumOrder] = useState([]);\n    const location = useHistory();\n    const dispatch = useDispatch();\n    const currentUser = useSelector((redux) => redux.auth.user);    // only updates value of currentUser when redux.auth changes\n\n    useEffect(() => {\n        if (currentUser) {\n            fetch(`${url}/api/project/userId/${currentUser.id}`)\n                .then(res => res.json())\n                .then(data => {\n                    setprojectDetails(data);\n                    console.log(\"Home.js: Data straight from server =\", data)\n                })\n                .catch(err => console.log('Cannot reach the server', err))\n        }\n\n    }, [currentUser])\n\n    useEffect(() => {\n        fetch(`${url}/api/init/projects`)\n            .then((res) => res.json())\n            .then((data) => {\n                handleDesiredProjectNumOrder(data);\n                // console.log(\"Home.js: Init projects =\", data);\n            })\n            .catch((err) => console.log(\"Cannot reach the server\", err));\n    }, [])\n\n    const handleDesiredProjectNumOrder = (dataFromServer) => {\n        let arrayOfProjectNum = []\n        dataFromServer.forEach(obj => {\n\n            arrayOfProjectNum.push(obj.name)\n        })\n        // console.log(\"projects obj from server\", arrayOfProjectNum);\n        setDesiredProjectNumOrder(arrayOfProjectNum)\n    }\n\n\n    const handleOnClickCreate = () => {\n        dispatch(clearForm());\n        location.push({\n            pathname: '/create-project',\n            state: { editMode: false }\n        })\n    }\n    const handleOnClickToDetails = (event) => {\n        return <Details />;\n    }\n\n    // redirect\n    return (\n        <div className=\"xs:w-100 sm:w-140 md:w-200 lg:w-240 mx-auto  text-gray-900 bg-white   text-md md:text-md lg:text-lg\">\n            <div className=\"w-full mx-10 mt-6 px-6 py-8 \" >\n                <div id=\"section-title\" className=\"text-gray-800 font-bold text-center text-xl mb-10\">\n                    <h1 className=\"font-medium\">Welcome to your dashboard</h1>\n\n                </div>\n                <Links />\n\n                <div>\n                    <button\n                        className=\"object-right  bg-white text-green-400 border-2 border-green-400 py-1 px-2 rounded-full hover:text-white hover:bg-green-400 focus:outline-none focus:shadow-outline\"\n                        onClick={handleOnClickCreate}\n                    >\n                        New Project</button>\n                    <div>\n                        {/* <hr className=\"h-1 border-gray-400 mt-4\" /> */}\n                        <CatalogList\n                            projectData={projectDetails}\n                            desiredProjectNumberOrder={desiredProjectNumOrder}\n                        />\n\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n\n\n    )\n}\n\nexport default Dashboard;","import styled from \"styled-components\"\nimport tw from \"twin.macro\"\n\nconst StyledForm = styled.main.attrs({\n  className: \"\",\n})`\n  & {\n    form {\n      ${tw``}\n    }\n    input {\n      ${tw`bg-gray-100 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-teal-500`}\n    }\n    button {\n      ${tw``}\n    }\n    label {\n      ${tw`block text-gray-600  text-left mb-1 pr-4`}\n    }\n    textarea {\n      ${tw`bg-gray-100 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-teal-500`}\n    }\n    select {\n      ${tw`bg-gray-100  border-2 border-gray-200 rounded w-full py-2 pl-2  text-gray-600 leading-tight focus:outline-none focus:bg-white focus:border-teal-500`}\n    }\n    button {\n      ${tw`object-right  bg-white text-green-400 border-2 border-green-400 py-1 px-2 rounded-full hover:text-white hover:bg-green-400 focus:outline-none focus:shadow-outline`}\n    }\n    .oneThird {\n      ${tw`w-1/3 flex-initial mt-2`}\n    }\n    .twoThird {\n      ${tw`w-2/3  flex-1 mt-2`}\n    }\n    .container {\n      ${tw` w-full bg-gray-100 border-2 `}\n    }\n  }\n`\nexport default StyledForm","import React, { useState } from 'react';\nimport StyledForm from './StyledForm';\n\nconst DropdownList = (props) => {\n    let renderedList = []\n    if (props.list) {\n        renderedList = props.list.map((item, index) => {\n            return (\n                <option\n                    value={item}\n                    key={item + index}\n\n                >\n                    {item}</option>\n            )\n        })\n    }\n\n\n    return (\n        <StyledForm>\n            <div className=\"flex-wrap mb-6\" >\n                <div className=\"\">\n                    <label className=\"\">{props.label}</label>\n\n                    <select\n                        id={props.id ? props.id : 0}\n                        onChange={props.handleSelectedItem}\n                        value={props.selectedValue}\n                    >\n                        {renderedList}\n\n                    </select>\n                </div>\n            </div>\n        </StyledForm>\n\n    )\n}\n\nexport default DropdownList;","import React, { useState, useEffect } from 'react';\nimport DropdownList from './DropdownList';\nimport StyledForm from './StyledForm';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    setFormTitle,\n    setFormTeamName,\n    setFormSelectedCohort,\n    setFormProjectNumber\n} from '../../actions/form';\nimport { config } from '../../config/config';\n\nconst url = config.BACKEND.URL;\nconst CreateProjectTopSection = (props) => {\n    const [listOfCohorts, setListOfCohorts] = useState([]);\n    const [listOfProjectsNumber, setListOfProjectsNumber] = useState([]);\n    const project = useSelector(state => state.form);\n    const title = project.data.project_name || '';\n    const teamName = project.data.team_name;\n    const selectedCohort = project.data.cohort_num;\n    const selectedProject = project.data.project_num;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        validateTitle()\n    }, [])\n\n    useEffect(() => {\n        fetch(`${url}/api/init/cohorts`)\n            .then(res => res.json())\n            .then(data => handleListOfThingsFromServer(data, 'cohorts'))\n            .catch(err => {\n                // setServerFailed(true)\n                console.log('The server could not be reach: ', err)\n            })\n    }, [])\n    useEffect(() => {\n        fetch(`${url}/api/init/projects`)\n            .then(res => res.json())\n            .then(data => handleListOfThingsFromServer(data, 'projects'))\n            .catch(err => {\n                // setServerFailed(true)\n                console.log('The server could not be reach: ', err)\n            })\n\n    }, [])\n\n    const handleChangeTitle = (e) => {\n        dispatch(setFormTitle(e.target.value))\n    }\n\n    const handleChangeTeamName = e => {\n        dispatch(setFormTeamName(e.target.value))\n    }\n\n    const handleListOfThingsFromServer = (dataFromServer, key) => {\n        // console.log('in handle server', dataFromServer)\n        let arrayForSetting = []\n        dataFromServer.map(obj => arrayForSetting.push(obj.name))\n        if (key === 'projects') setListOfProjectsNumber(arrayForSetting)\n        if (key === 'cohorts') setListOfCohorts(arrayForSetting)\n    }\n    const validateTitle = () => {\n        const title = document.querySelector('#title')\n        if (title && title.value.length > 5) return true;\n        return false;\n    }\n\n\n    return (\n        <div>\n            <StyledForm>\n                <form>\n                    <div className=\"flex-wrap  mb-6\" >\n                        <div className=\"\">\n                            <label\n                                htmlFor=\"title\"\n                            >\n                                Project Title:</label>\n                        </div>\n                        <div className=\"\">\n                            {validateTitle() ? \"\" : <span className=\"text-red-400\">required *</span>}\n                        </div>\n                        <div className=\"w-full\">\n                            <input\n                                id='title'\n                                type='text'\n                                autoComplete=\"off\"\n                                onChange={handleChangeTitle}\n                                value={title}\n                            />\n\n                        </div>\n                    </div >\n                    <div className=\"flex-wrap mb-6\" >\n                        <div className=\"\">\n                            <label\n                                htmlFor=\"team-name\"\n                            >\n                                Team Name:</label>\n                        </div>\n                        <div className=\"w-full\">\n                            <input\n                                id='team-name'\n                                type='text'\n                                autoComplete=\"off\"\n                                onChange={handleChangeTeamName}\n                                value={teamName}\n                            />\n                        </div>\n                    </div >\n                    <div className=\"flex space-x-20\">\n                        <DropdownList\n                            id={props.id1}\n                            list={listOfCohorts}\n                            label={props.labelDropdown1}\n                            handleSelectedItem={e => dispatch(setFormSelectedCohort(e.target.value))}\n                            selectedValue={selectedCohort}\n                        />\n                        <DropdownList\n                            id={props.id2}\n                            list={listOfProjectsNumber}\n                            label={props.labelDropdown2}\n                            handleSelectedItem={e => dispatch(setFormProjectNumber(e.target.value))}\n                            selectedValue={selectedProject}\n                        />\n                    </div>\n\n\n\n                </form>\n            </StyledForm>\n\n\n        </div>\n    )\n\n};\n\nexport default CreateProjectTopSection;","import React, { useState, useEffect } from 'react';\nimport StyledForm from './StyledForm';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFormRepoLink, setFormWebsiteLink } from '../../actions/form';\n\nconst InsertLink = (props) => {\n    const project = useSelector(state => state.form);\n    const dispatch = useDispatch();\n    const repoLink = project.data.repository;\n    const websiteLink = project.data.website_link;\n    const [value, setValue] = useState('');\n    // const [isValidate, setIsValidate] = useState(false);\n\n    // const validate = (e) => {\n    //     const regExpHttp = /^http/;\n    //     console.log()\n    //     if (props.value.match(regExpHttp)) {\n    //         setIsValidate(true)\n    //         props.isValidate(true)\n    //         return props.handleClick(e)\n\n    //     }\n    //     setIsValidate(false)\n    // }\n\n    useEffect(() => {\n        if (props.inputId === 'github-link') {\n            setValue(repoLink);\n        }\n        if (props.inputId === 'website-link') {\n            setValue(websiteLink);\n        }\n    }, [repoLink, websiteLink])\n    const handleChangeInput = (e) => {\n        if (props.inputId === 'github-link') {\n            dispatch(setFormRepoLink(e.target.value))\n        }\n        if (props.inputId === 'website-link') {\n            dispatch(setFormWebsiteLink(e.target.value));\n        }\n    }\n    const handleKeyUp = () => { }\n\n    return (\n        <StyledForm>\n            <div className=\"flex-wrap inline-flex mb-6 \" >\n                <div className=\"\">\n                    <label\n                        htmlFor={props.inputId}\n                        className=\"block\"\n                    >{props.label}:</label>\n                </div>\n                <div>\n                    {props.isRequired ? <span className=\"text-red-400\">required *</span> : \"\"}\n                    {/* {isValidate ? \"\" : <span className=\"\"> Format: https://</span>} */}\n                </div>\n                <div className=\"w-full\">\n                    <div className=\"\">\n                        <input\n                            id={props.inputId}\n                            type='text'\n                            onChange={handleChangeInput}\n                            onKeyUp={handleKeyUp}\n                            value={value}\n                        />\n                    </div>\n                    {/* <div className=\"flex items-center justify-between w-full mb-5 mt-1\">\n                        <button\n                            id={props.btnId}\n                            onClick={validate}\n                        >Verify Link</button>\n                    </div> */}\n                </div>\n            </div>\n        </StyledForm>\n    );\n\n};\n\nexport default InsertLink;","export const inputValues = [\n    {\n        id: 'checkbox-html',\n        value: 'HTML/CSS',\n        sectionId: 'section-languages',\n    },\n    {\n        id: 'checkbox-js',\n        value: 'Javascript',\n        sectionId: 'section-languages',\n    },\n    {\n        id: 'checkbox-python',\n        value: 'Python',\n        sectionId: 'section-languages',\n    },\n    {\n        id: 'checkbox-vuejs',\n        value: 'Vue.js',\n        sectionId: 'section-framework'\n    },\n    {\n        id: 'checkbox-react',\n        value: 'React.js',\n        sectionId: 'section-framework'\n    },\n    {\n        id: 'checkbox-bootstrap',\n        value: 'Bootstrap',\n        sectionId: 'section-framework'\n    },\n    {\n        id: 'checkbox-redux',\n        value: 'Redux',\n        sectionId: 'section-framework'\n    },\n    {\n        id: 'checkbox-nodejs',\n        value: 'Node.js',\n        sectionId: 'section-backend'\n    },\n    {\n        id: 'checkbox-sql',\n        value: 'SQL',\n        sectionId: 'section-backend'\n    },\n    {\n        id: 'checkbox-nosql',\n        value: 'NoSQL',\n        sectionId: 'section-backend'\n    },\n    {\n        id: 'checkbox-express',\n        value: 'Express',\n        sectionId: 'section-backend'\n    },\n    {\n        id: 'checkbox-flask',\n        value: 'Flask',\n        sectionId: 'section-backend'\n    }\n]\n\nexport const sectionValues = [\n    {\n        label: 'Languages',\n        outerSectionId: 'section-checkbox-1',\n        innerSectionId: 'section-languages'\n    },\n    {\n        label: 'Front-End',\n        outerSectionId: 'section-checkbox-2',\n        innerSectionId: 'section-framework'\n    },\n    {\n        label: 'Back-End',\n        outerSectionId: 'section-checkbox-3',\n        innerSectionId: 'section-backend'\n    }\n]","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n   setFormLanguages,\n   setFormFramework,\n   setFormBackend\n} from '../../actions/form';\nimport { inputValues, sectionValues } from '../../constants/form';\n\n\nconst CheckboxSection = (props) => {\n   const project = useSelector(state => state.form);\n   const dispatch = useDispatch();\n   const languages = project.data.language;\n   const framework = project.data.framework;\n   const backend = project.data.database;\n\n   const setLanguages = (value) => { dispatch(setFormLanguages(value)) };\n   const setFramework = (value) => { dispatch(setFormFramework(value)) };\n   const setBackend = (value) => { dispatch(setFormBackend(value)) };\n\n   const renderedSections = () => {\n      return sectionValues.map(values => {\n         let arrayOfObj = [];\n         let ref = null;\n\n         if (values.innerSectionId === 'section-languages') ref = languages;\n         else if (values.innerSectionId === 'section-framework') ref = framework;\n         else { ref = backend; }\n\n         inputValues.forEach(valuesObj => {\n            if (values.innerSectionId === valuesObj.sectionId) {\n               arrayOfObj.push(valuesObj)\n            }\n         })\n         return (\n            <form id={values.outerSectionId} key={values.outerSectionId}>\n               <div id={values.innerSectionId}>\n                  <label className=\"text-gray-700\">{values.label}</label>\n                  <br />\n                  {renderedCheckbox(arrayOfObj, ref)}\n               </div>\n            </form>\n         )\n      })\n   }\n\n   const renderedCheckbox = (arrayOfObj, reference) => {\n\n      return arrayOfObj.map(obj => {\n         let checked = false;\n         reference.forEach(item => {\n            if (obj.value === item) {\n               checked = true;\n            }\n         })\n         return (\n\n            <div key={obj.id}>\n               <input\n                  id={obj.id}\n                  type='checkbox'\n                  value={obj.value}\n                  className='mx-2'\n                  checked={checked}\n                  onChange={handleChangeCheckbox}\n               />\n               <label\n                  htmlFor={obj.id}\n                  className=\"text-gray-700\"\n               >{obj.value}</label>\n            </div>\n\n         )\n      })\n\n   }\n   const handleChangeCheckbox = (event) => {\n      let array = [];\n      console.log(\"event.target.value=\", event.target.value)\n      const value = event.target.value;    //removes \"checkbox-\" from event object's id\n\n      const parentId = document.querySelector('#' + event.target.id).parentNode.parentNode.id;\n      console.log(\"parentId=\", parentId);\n      const key = parentId.slice(8);          // removes \"section-\" from event object's parent object's id\n\n      let index = -1;\n\n      switch (key) {\n         case 'languages':\n            array = [...languages];      // makes a copy of the languages array\n            index = array.indexOf(value);\n\n            if (index === -1) {\n               array.push(value);       // When box is checked, adds this languages to the array\n               setLanguages(array);\n            } else {\n               array.splice(index, 1);  // for uncheck, removes this language from the array\n               setLanguages(array);\n            }\n            break;\n\n         case 'framework':\n            array = [...framework];\n            index = array.indexOf(value);\n            if (index === -1) {\n               array.push(value);\n               setFramework(array);\n            } else {\n               array.splice(index, 1);\n               setFramework(array);\n            }\n            break;\n\n         case 'backend':\n            array = [...backend];\n            index = array.indexOf(value);\n            if (index === -1) {\n               array.push(value);\n               setBackend(array);\n            } else {\n               array.splice(index, 1);\n               setBackend(array);\n            }\n            break;\n         default:\n            break;\n      }\n      console.log(\"Amended array is:\", array)\n      console.log(\"\")\n   }\n\n   return (\n      // Container for Checkbox controls\n      <div className=\"flex flex-row flex-wrap justify-around align-center\">\n         {renderedSections()}\n      </div>\n   )\n\n};\n\nexport default CheckboxSection;","import React from 'react';\n// import StyledForm from './StyledForm'\n\nconst AutocompleteList = ({ suggestions, indexSuggestion, handleClickAutocomplete }) => {\n\n\n    const renderedList = suggestions.map((suggestion, index) => {\n        if (index === indexSuggestion) {\n            return (<li\n                onClick={handleClickAutocomplete}\n                data-id={index}\n                className=\"font-900\"\n                key={suggestion}\n            > { suggestion}</li >)\n        } else {\n            return (<li\n                onClick={handleClickAutocomplete}\n                data-id={index}\n                key={suggestion}\n            >{suggestion}</li>)\n        }\n    })\n\n    if (renderedList.length) {\n        return (\n            // <StyledForm>\n            <React.Fragment>\n                <ul>\n                    {renderedList}\n                </ul>\n\n            </React.Fragment>\n            // </StyledForm>\n\n        )\n    } else {\n        return <div></div>\n    }\n\n}\n\nexport default AutocompleteList;","import React from 'react';\n\nconst ListOfChoices = ({ itemsList, handleItemsList, handleClickList }) => {\n\n    const bgWhite = \"list-disc\"//class name\n\n    const renderedList = itemsList.map((item, index) => {\n\n        return (<li\n            id={item.concat(index)}\n            key={item.concat(index)}\n            onClick={handleClickList}\n            className={bgWhite}\n        >{item}</li>)\n\n\n    })\n    if (renderedList.length) {         // No need for a comparison?\n        return (\n            <React.Fragment>\n                <ul>\n                    {renderedList}\n                </ul>\n\n            </React.Fragment>\n\n        )\n    } else {\n        return <div></div>\n    }\n\n\n}\n\nexport default ListOfChoices;","import React, { useState, useEffect } from 'react';\nimport '../../styles/SearchAndAdd.css';\nimport StyledForm from './StyledForm';\nimport AutocompleteList from './AutocompleteList';\nimport ListOfChoices from './ListOfChoices';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFormTeammates, setFormTools } from '../../actions/form';\nimport { SET_FORM_TEAMMATES, SET_FORM_TOOLS } from '../../actions/types';\n\nconst SearchAndAdd = (props) => {\n    const [toAddToTheList, setToAddToTheList] = useState([]);\n    const [indexSuggestion, setIndexSuggestion] = useState(0)\n    const [suggestions, setSuggestions] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const project = useSelector(state => state.form);\n    const teamMemberNames = project.data.name_team_member;\n    const tools = project.data.extra_tool;\n    const dispatch = useDispatch();\n\n    //Update redux state when change in selection\n    useEffect(() => {\n        console.log('toAddToTheList', toAddToTheList)\n        if (props.reference === SET_FORM_TEAMMATES) {\n            dispatch(setFormTeammates(toAddToTheList))\n        } else if (props.reference === SET_FORM_TOOLS) {\n            dispatch(setFormTools(toAddToTheList))\n        }\n\n    }, [dispatch, toAddToTheList])\n\n    //Get the state in redux when loading\n    useEffect(() => {\n        if (props.reference === SET_FORM_TEAMMATES) {\n            if (teamMemberNames && teamMemberNames.length) {\n                teamMemberNames.forEach(name => {\n                    if (isUniqueItemInArray(name, toAddToTheList)) {\n                        setToAddToTheList(oldArray => [...oldArray, name])\n                    }\n                })\n            }\n        } else if (props.reference === SET_FORM_TOOLS) {\n            if (tools && tools.length) {\n                tools.forEach(name => {\n                    if (isUniqueItemInArray(name, toAddToTheList)) {\n                        setToAddToTheList(oldArray => [...oldArray, name])\n                    }\n                })\n            }\n        }\n\n    }, [teamMemberNames, tools])\n\n\n    const searching = (myInput, myDataList) => {\n        if (myDataList) {\n            const result = [];\n            myDataList.forEach((element) => {\n                const elementPresent = element.toLowerCase().startsWith(myInput.toLowerCase())\n                if (elementPresent) {\n                    result.push(element);\n                }\n            })\n            if (myInput === \"\") {\n                setSuggestions([])\n                setIndexSuggestion(0)\n            } else {\n                setSuggestions(result)\n            }\n        }\n    }\n\n    const onChangeInput = (event) => {\n        event.preventDefault()\n        setInputValue(event.target.value)\n        // console.log('onChangeInput: ', event.target.value)\n        searching(event.target.value, props.listOfItems)\n    }\n    const isUniqueItemInArray = (item, array) => {\n\n        let same = []\n        array.forEach(itemOfArray => {\n            if (itemOfArray === item) {\n                same.push(item)\n            }\n        })\n        if (!same.length) {\n            return true\n        }\n        return false\n    }\n    const onKeyUp = (event) => {\n        event.preventDefault();\n        console.log(event.keyCode)\n        const key = event.keyCode;\n        const arrowUp = 38;\n        const arrowDown = 40;\n        const enterKey = 13;\n        if (suggestions.length !== 0) {\n            switch (key) {\n                case arrowUp:\n                    if (indexSuggestion > 0) {\n                        setIndexSuggestion(indexSuggestion - 1)\n                    }\n                    break;\n                case arrowDown:\n                    if (indexSuggestion < suggestions.length - 1)\n                        setIndexSuggestion(indexSuggestion + 1)\n                    break;\n                case enterKey:\n                    if (suggestions.length !== 0) {\n                        if (isUniqueItemInArray(suggestions[indexSuggestion], toAddToTheList)) {\n                            setToAddToTheList(oldArray => [...oldArray, suggestions[indexSuggestion]])\n                        }\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n    }\n\n    const resetSuggestions = (e) => {\n        console.log(e)\n        e.preventDefault();\n        setSuggestions([])\n        setIndexSuggestion(0)\n    }\n    const handleClickAutocomplete = (e) => {\n        console.log(e.target)\n        e.preventDefault();\n        if (suggestions.length !== 0) {\n            if (isUniqueItemInArray(e.target.textContent, toAddToTheList)) {\n                setToAddToTheList(oldArray => [...oldArray, e.target.textContent])\n            }\n        }\n\n        resetSuggestions(e);\n    }\n    const handleClickList = (e) => {\n        let list = toAddToTheList.slice();\n        list.splice(list.indexOf(e.target.textContent), 1);\n        setToAddToTheList(list)\n    }\n\n    return (\n        <StyledForm>\n            <div id=\"section-bottom\" className=\"mt-3 mt-6\"   >\n\n                <div id=\"section-tools\" className=\"flex-nowrap w-full mb-6 \"\n\n                >\n\n                    <div className=\"\">\n                        <label\n                            htmlFor=\"input-search\"\n                        >\n                            Add {props.label}:</label>\n                    </div>\n                    <div className=\"\">\n                        <input\n                            id='input-search'\n                            type='input'\n                            placeholder=\"Search\"\n                            autoComplete=\"off\"\n                            onChange={onChangeInput}\n                            onKeyUp={onKeyUp}\n                            value={inputValue}\n                        />\n\n                        <div\n                            className=\"autocomplete-box rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-teal-500\"\n                        >\n                            <AutocompleteList\n                                indexSuggestion={indexSuggestion}\n                                suggestions={suggestions}\n                                handleClickAutocomplete={handleClickAutocomplete}\n\n                            />\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"flex mb-6\">\n                    <div className=\"w-full\">\n                        <label\n                            htmlFor=\"title\"\n                        >\n                            {props.label}:</label>\n                    </div>\n                    <div className=\"w-full\">\n                        <div\n                            className=\"autocomplete-box  bg-gray-100 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-teal-500\"\n                        >\n                            <ListOfChoices\n                                itemsList={toAddToTheList}\n                                handleClickList={handleClickList}\n                            />\n\n                        </div>\n                    </div>\n                </div>\n            </div >\n        </StyledForm>\n\n    )\n\n};\n\nexport default SearchAndAdd;\n\n\n","import React, { useEffect } from 'react';\nimport '../../styles/UploadImage.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFormImage } from '../../actions/form';\n\n\nconst UploadImage = (props) => {\n    const project = useSelector(state => state.form);\n    const dispatch = useDispatch();\n    const screenshot = project.data.screenshot;\n    const screenshot_name = project.data.screenshot_name;\n\n\n    return (\n        <div className=\"mb-6 flex \" >\n            <div className=\"w-1/3 flex-initial mt-2 mb-2\">\n                <label\n                    htmlFor=\"add-image\"\n                    className=\"object-right flex-end bg-white text-green-400 hover:bg-green-400 hover:text-white border-2 border-green-400  py-1 px-2 ml-6 rounded-full focus:outline-none focus:shadow-outline\"\n                >Screenshot</label>\n                <input\n                    id=\"add-image\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple={false}\n                    className=\"add-image \"\n                    onChange={e => dispatch(setFormImage([e.target.files[0]]))}\n                />\n            </div>\n            <div className=\"w-1/2 flex-initial mt-2 mb-2\">\n                {/* <label\n                    className=\"read-only\"\n                >{(screenshot && screenshot[0]) ? <span>{screenshot[0].name}</span> : \"\"} </label> */}\n                <label\n                    className=\"read-only\">{screenshot_name}</label>\n            </div>\n        </div>\n    )\n};\n\nexport default UploadImage;","import React from 'react';\nimport StyledForm from './StyledForm';\n\nconst SubmitButtons = (props) => {\n\n\n    return (\n        <StyledForm>\n            <div className=\"flex w-full justify-end mb-5 mt-1\">\n                <div className=\"px-2\">\n                    <button\n\n\n                        onClick={props.handleClick}\n                    >{props.label}</button>\n                </div>\n            </div>\n        </StyledForm >\n\n    )\n\n}\n\nexport default SubmitButtons;","import React, { useState, useEffect } from 'react';\nimport StyledForm from './StyledForm';\nimport ListOfChoices from './ListOfChoices';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFormFeature } from '../../actions/form';\n\nconst FeatureList = (props) => {\n    const project = useSelector(state => state.form);\n    const keyFeature = project.data.key_feature;\n    const dispatch = useDispatch();\n    const [inputValue, setInputValue] = useState('');\n    // const [listOfFeature, setListOfFeature] = useState([]);\n\n\n    const handleOnKeyUp = (e) => {\n        e.preventDefault();\n        const enterKey = 13;\n        if (e.keyCode === enterKey && inputValue.length >= 3) {\n            // let newList = listOfFeature.slice()\n            let newList = [...keyFeature]\n            newList.push(e.target.value)\n            // setListOfFeature(newList)\n            dispatch(setFormFeature(newList))\n            setInputValue('')\n        }\n\n    }\n    const handleClickList = (e) => {\n        console.log(e.target.textContent)\n        // let newList = listOfFeature.slice();\n        let newList = [...keyFeature]\n        newList.splice(newList.indexOf(e.target.textContent), 1)\n        // setListOfFeature(newList)\n        dispatch(setFormFeature(newList))\n    }\n    return (\n\n        <StyledForm>\n            <div className=\"flex-wrap inline-flex mb-6 w-full\" >\n                <div className=\"\">\n                    <label\n                        htmlFor=\"title\"\n                    >{props.label}</label>\n                </div>\n                <div className=\"w-full mb-4\">\n                    <div className=\"\">\n                        <div className=\"\">\n                            <input\n                                id={props.id}\n                                type='text'\n                                onChange={e => setInputValue(e.target.value)}\n                                value={inputValue}\n                                onKeyUp={handleOnKeyUp}\n                                autoComplete=\"off\"\n                            />\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"w-full flex justify-center\">\n                    <div\n                        className=\"autocomplete-box  appearance-none border-2 border-gray-200 rounded w-4/5 py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-teal-500\"\n                    >\n                        <ListOfChoices\n                            itemsList={keyFeature}\n                            handleClickList={handleClickList}\n                        />\n                    </div>\n                </div>\n            </div>\n        </StyledForm>\n\n\n    )\n}\n\nexport default FeatureList;\n","import React, { useEffect } from 'react'\nimport StyledForm from './StyledForm';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFormDescription } from '../../actions/form';\n\nfunction DescriptionSection(props) {\n    const project = useSelector(state => state.form);\n    const description = project.data.description;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        validateDescription()\n\n    }, [])\n\n    const validateDescription = () => {\n        const description = document.querySelector('#description')\n        if (description && description.value.length > 30) return true;\n        return false;\n    }\n\n    return (\n        <div>\n            <StyledForm>\n                <div className=\"flex-wrap inline-flex mb-6 mt-6\" >\n                    <div className=\"\">\n                        <label\n                            htmlFor=\"description\"\n                        >Project Description:</label>\n                    </div>\n                    <div className=\"\">\n                        {validateDescription() ? \"\" : <span className=\"text-red-400\">required *</span>}\n                    </div>\n                    <div className=\"w-full\">\n                        <textarea\n                            id='description'\n                            rows=\"8\"\n                            resize=\"vertical\"\n                            onChange={e => dispatch(setFormDescription(e.target.value))}\n                            value={description}\n                        />\n\n                    </div>\n                </div>\n            </StyledForm>\n\n        </div>\n    )\n}\n\nexport default DescriptionSection\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport '../../styles/CreateProjectPage.css'\nimport CreateProjectTopSection from './CreateProjectTopSection';\nimport InsertLink from './InsertLink';\nimport CheckboxSection from './CheckboxSection';\nimport SearchAndAdd from './SearchAndAdd';\nimport UploadImage from './UploadImage';\nimport SubmitButtons from './SubmitButtons';\nimport FeatureList from './FeatureList';\nimport DescriptionSection from './DescriptionSection';\n// import ListOfLinkAccount from './ListOfLinkAccount';\nimport { config } from '../../config/config';\nimport { SET_FORM_TEAMMATES, SET_FORM_TOOLS } from '../../actions/types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { postFormData, updateFormData } from '../../actions/form';\n\nconst CreateProjectPage = (props) => {\n\n    const url = config.BACKEND.URL;\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const project = useSelector(state => state.form);\n    const currentUser = useSelector((redux) => redux.auth.user);\n    const [title, setTitle] = useState('');\n    const [teamName, setTeamName] = useState('')\n    const [githubLink, setGithubLink] = useState('');\n    const [githubLinkIsValid, setGithubLinkIsValid] = useState(false);\n    const [websiteLink, setWebsiteLink] = useState('');\n    const [websiteLinkIsValid, setWebsiteLinkIsValid] = useState(false);\n    const [isLinkRequired, setIsLinkRequired] = useState(true);\n    const [selectedCohort, setSelectedCohort] = useState('Cohort 1');\n    const [selectedProjectNumber, setSelectedProjectNumber] = useState('Project 1 (Online Resume)')\n    const [listOfAllStudents, setListOfAllStudents] = useState([]);\n    const [listOfTools, setListOfTools] = useState([]);\n\n    const [serverFailed, setServerFailed] = useState(false);\n    const [currentStep, setCurrentStep] = useState(1);\n\n    const editMode = props.location.state.editMode;\n\n    const onPublish = async (event) => {\n        console.log('editMode', editMode)\n        if (!editMode) {\n            await dispatch(postFormData(project, currentUser));\n        } else {\n            await dispatch(updateFormData(project, currentUser));\n        }\n\n        history.push('/dashboard')\n\n    }\n\n    useEffect(() => {\n\n        fetch(`${url}/api/init/students`)\n            .then(res => res.json())\n            .then(data => handleListOfThingsFromServer(data, 'students'))\n            .catch(err => {\n                setServerFailed(true)\n                console.log('The server could not be reach: ', err)\n            })\n    }, [])\n    useEffect(() => {\n        fetch(`${url}/api/init/tools`)\n            .then(res => res.json())\n            .then(data => handleListOfThingsFromServer(data, 'tools'))\n            .catch(err => {\n                setServerFailed(true)\n                console.log('server fail tools')\n                console.log('The server could not be reach: ', err)\n            })\n\n    }, [])\n    const handleListOfThingsFromServer = (dataFromServer, key) => {\n        console.log('in handle server', dataFromServer, key)\n        let arrayForSetting = []\n        dataFromServer.map(obj => arrayForSetting.push(obj.name))\n        if (key === 'students') setListOfAllStudents(arrayForSetting)\n        if (key === 'tools') setListOfTools(arrayForSetting)\n    }\n\n\n    useEffect(() => {\n        if (githubLinkIsValid || websiteLinkIsValid) {\n            setIsLinkRequired(false)\n        } else {\n            setIsLinkRequired(true)\n        }\n    }, [githubLinkIsValid, websiteLinkIsValid])\n\n\n    const goToLink = (event) => {\n        const id = event.target.id;\n        switch (id) {\n            case 'github-link':\n                window.open(githubLink, '_blank');\n                break;\n            case 'btn-github':\n                window.open(githubLink, '_blank')\n                break;\n\n            case 'website-link':\n                window.open(websiteLink, '_blank');\n                break;\n            case 'btn-website':\n                window.open(websiteLink, '_blank');\n                break;\n            default:\n                break;\n        }\n\n    }\n\n\n    // const keyUp = (event) => {\n    //     const enterKey = 13;\n    //     if (event.keyCode === enterKey) {\n    //         goToLink(event)\n    //     }\n\n    // }\n    //this is it a cleaning function, unable to initialize state in child\n    //array accounts gets back with null value in it\n    //function is to remove them\n    // const handleMemberAccounts = (accounts) => {\n    //     let cleanArray = []\n    //     const oldArray = accounts;\n    //     oldArray.map(item => {\n    //         console.log(item)\n    //         if (item && (item.github || item.linked)) cleanArray.push(item)\n    //     })\n    //     console.log(cleanArray)\n    //     setTeamMemberAccounts(cleanArray)\n\n    // }\n\n\n    useEffect(() => {\n        console.log('selectedCohort: ', selectedCohort)\n        console.log('selectedProjectNumber', selectedProjectNumber)\n    }, [selectedCohort, selectedProjectNumber])\n\n    // const validate = () => {\n    //     // return true;\n    //     if (title.length < 5) return false\n    //     if (description.length < 30) return false\n    //     if (!githubLinkIsValid && !websiteLinkIsValid) return false\n    //     return true;\n    // }\n\n    const nextStep = () => {\n        setCurrentStep(currentStep >= 6 ? 7 : currentStep + 1)\n    }\n    const prevStep = () => {\n        setCurrentStep(currentStep <= 1 ? 1 : currentStep - 1)\n    }\n    const previousButton = () => {\n        if (currentStep !== 1) {\n            return (\n                <button\n                    className=\"bg-white text-green-400 border-2 border-green-400 py-1 px-2 rounded-lg hover:text-white hover:bg-green-400 focus:outline-none focus:shadow-outline\"\n                    type='button' onClick={prevStep}>\n                    Previous\n                </button>\n            )\n        }\n        return null\n    }\n    const nextButton = () => {\n        if (currentStep < 7) {\n            return (\n                <button\n                    className=\"bg-white text-green-400 border-2 border-green-400 py-1 px-6 rounded-lg hover:text-white hover:bg-green-400 focus:outline-none focus:shadow-outline\"\n                    type='button' onClick={nextStep}>\n                    Next\n                </button>\n            )\n        }\n        return null\n    }\n    return (\n        <div className=\"w-full flex justify-center \">\n            <div className=\"mx-10 mt-6 px-12 py-8 \" >\n\n                <div id=\"section-title\" className=\"text-gray-800 font-bold text-center text-xl mb-10\">\n                    {serverFailed ? <h2><span className=\"text-red-400\">The server cannot be reach</span></h2> : <span></span>}\n                    <h1>Create a new project!</h1>\n\n                </div>\n                {currentStep === 1 ? (\n\n\n                    <div className=\"\">\n\n                        <h3 className=\"text-gray-700 font-bold text-center text-xl mb-10 \">Team Member(s)</h3>\n                        <p className=\"text-gray-700 font-bold mb-2\">Here you can search for you team member.</p>\n\n                        <SearchAndAdd\n                            label=\"Team Member\"\n                            listOfItems={listOfAllStudents}\n                            reference={SET_FORM_TEAMMATES}\n                        />\n\n                    </div>\n                ) : null}\n                {currentStep === 2 ? (\n                    <div className=\"\">\n                        <h3 className=\"text-gray-700 font-bold text-center text-xl mb-10\">Title and Team Name</h3>\n\n                        <CreateProjectTopSection\n                            handleChangeTitle={event => setTitle(event.target.value)}\n\n                            title={title}\n\n                            handleChangeTeamName={event => setTeamName(event.target.value)}\n                            teamName={teamName}\n\n                            id1=\"cohorts-dropdown\"\n                            labelDropdown1=\"Cohort Number:\"\n                            handleSelectedCohort={e => setSelectedCohort(e.target.value)}\n\n                            id2=\"projectsnumber-dropdown\"\n                            labelDropdown2=\"Project Number:\"\n                            handleSelectedProjectNumber={e => setSelectedProjectNumber(e.target.value)}\n                        />\n                    </div>\n                ) : null}\n                {currentStep === 3 ? (\n                    <div className=\"\">\n                        <h3 className=\"text-gray-700 font-bold text-center text-xl mb-10\">Description</h3>\n\n                        <DescriptionSection />\n\n\n                    </div >\n                ) : null}\n                {currentStep === 4 ? (\n                    <div className=\"\">\n                        <h3 className=\"text-gray-700 font-bold text-center text-xl mb-10\">Key Feature and Screenshot</h3>\n                        <p className=\"text-gray-700 font-bold mb-2\">Please enter some feature you think people should know about.</p>\n\n                        <FeatureList\n                            id=\"key-feature\"\n                            label=\"Key Feature\"\n                        // listOfFeature={list => setFeature(list)}\n                        />\n                        <UploadImage />\n                    </div>\n\n                ) : null}\n                {currentStep === 5 ? (\n                    <div className=\"\">\n                        <h3 className=\"text-gray-700 font-bold text-center text-xl mb-10\">Repository and Website Address</h3>\n                        <p className=\"text-gray-700 font-bold mb-2\">At least one of these are required.</p>\n\n                        <InsertLink\n                            label=\"Project Repository Link\"\n                            inputId=\"github-link\"\n                            btnId=\"btn-github\"\n                            handleClick={goToLink}\n                            isValidate={resp => setGithubLinkIsValid(resp)}\n                            isRequired={isLinkRequired}\n\n                        />\n                        <InsertLink\n                            label=\"Project Website Link\"\n                            inputId=\"website-link\"\n                            btnId=\"btn-website\"\n                            handleClick={goToLink}\n                            isValidate={resp => setWebsiteLinkIsValid(resp)}\n                            isRequired={isLinkRequired}\n                        />\n                    </div>\n                ) : null}\n                {currentStep === 6 ? (\n                    <div className=\"\">\n                        <h3 className=\"text-gray-700 font-bold text-center text-xl mb-10\">Languages, Framework and Databases</h3>\n\n                        <CheckboxSection />\n                        <SearchAndAdd\n                            label=\"Languages/Tools\"\n                            listOfItems={listOfTools}\n                            reference={SET_FORM_TOOLS}\n                        />\n                    </div>\n                ) : null}\n                {currentStep === 7 ? (\n                    <div className=\"\">\n                        {/* <h3 className=\"text-gray-700 font-bold text-center text-xl mb-10\">Team Members Info</h3> */}\n\n                        {/* <ListOfLinkAccount /> */}\n                        <SubmitButtons\n                            label=\"Publish\"\n                            handleClick={onPublish}\n                        />\n                    </div>\n\n                ) : null}\n                <div className='w-100 flex justify-around'>\n                    {previousButton()}\n                    {nextButton()}\n\n                </div>\n            </div >\n        </div >\n    )\n}\n\nexport default CreateProjectPage;\n\n","import React, { useEffect } from 'react'\nimport { setFormData, fetchFormData } from '../../actions/form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nfunction Edit(props) {\n    const projectData = useSelector(state => state.form);\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const projectFromProps = props.location.state.project;\n\n    useEffect(() => {\n        dispatch(setFormData(projectFromProps))\n        history.push({\n            pathname: '/create-project',\n            state: { editMode: true }\n        })\n    }, [])\n    return (\n        <div>\n            <p>This is for test!!!</p>\n        </div>\n    )\n}\n\nexport default Edit;\n","import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport logo from \"../../images/EvolveUlog.jpg\";\nimport \"../home/tailwind_built.css\";\nimport \"../App.css\";\n\n// import NavbarStyle from \"../../components/navbar/NavbarStyle\";\nimport Login from \"../../components/auth.component/login.component\";\nimport Register from \"../../components/auth.component/register.component\";\nimport Profile from \"../../components/auth.component/profile.component\";\nimport User from \"../../components/auth.component/user.component\";\nimport Admin from \"../../components/auth.component/admin.component\";\nimport Student from \"../../components/auth.component/student.component\";\n\nimport Navbar from \"../../components/navbar/Navbar\"\nimport Home from \"../../components/home/Home\";\nimport Dashboard from \"../../components/dashboard/Dashboard\";\nimport Details from \"../../components/details/Details\";\nimport CreateProjectPage from \"../../components/createProjectPage/CreateProjectPage\";\nimport Edit from '../../components/createProjectPage/Edit';\nimport { logout } from \"../../actions/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nconst MainStack = (props) => {\n  let location = useLocation();\n  let pathname = location.pathname;\n  let currentUser = useSelector((redux) => redux.auth.user);    // only updates value of currentUser when redux.auth changes\n  let [showStudent, setShowStudent] = useState();\n  let [showAdmin, setShowAdmin] = useState();\n\n  useEffect(\n    () => {\n      setShowStudent(currentUser?.roles?.includes(\"ROLE_STUDENT\"));   // ?. is Chaining operator (handles NULL cases)\n      setShowAdmin(currentUser?.roles?.includes(\"ROLE_ADMIN\"));\n    },\n    [currentUser, setShowStudent, setShowAdmin] // This is the array of dependencies. Whenever currentUser changes this function will be run\n  );\n\n  let dispatch = useDispatch();\n\n  console.log(\"location=\", location);\n  console.log(\"currentUser=\", currentUser);\n  console.log(\"props=\", props);\n  console.log(\"showStudent=\", showStudent);\n  console.log(\"showAdmin=\", showAdmin);\n\n  const handleLogOut = () => dispatch(logout());\n\n  return (\n    <div>\n      {/* History allows the user to go back a page */}\n      {/* Set column width, default text size and color for the whole app */}\n      <div className=\"w-full flex flex-row justify-center\">\n        <div className=\"xs:w-100 sm:w-150 md:w-200 lg:w-240 xl:w-300  px-10\n             font-sans font-300  text-lg lg:text-xl  text-gray-900 bg-white\">\n\n          <Navbar />\n\n          <Switch>\n            <Route exact path={[\"/\", \"/catalog\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={User} />\n            <Route path=\"/admin\" component={Admin} />\n            <Route path=\"/student\" component={Student} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/details\" component={Details} />{\" \"}\n            {/* // The colon indicates that another parameter goes there (in this case the project ID?) */}\n            <Route path=\"/create-project\" component={CreateProjectPage} />\n            <Route path=\"/edit\" component={Edit} />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainStack;\n","import React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport \"./home/tailwind_built.css\";\nimport \"./App.css\";\n\nimport { clearMessage } from \"../actions/message\";\nimport MainStack from \"./routes/MainStack\";\nimport { useDispatch } from \"react-redux\";\nimport { createBrowserHistory } from \"history\";\n\n// Sets up the history listener, sets up the Router, and calls MainStack\nconst App = () => {\n  const history = createBrowserHistory();\n\n  let dispatch = useDispatch();\n\n  history.listen((location) => {\n    dispatch(clearMessage()); // clear message when changing location. Use dispatch hook to get dispatch function. See MainStack\n  });\n\n  return (\n    <Router history={history}>\n      <MainStack />{\" \"}\n      {/* moved into a sub-component so we can access location from Router */}\n    </Router>\n  );\n};\n\nexport default App;","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './assets/main.css';      //Use for production version\nimport './styles/Register.css'\nimport './styles/Navbar.css'\nimport { Provider } from \"react-redux\";\nimport store from './store'\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n\n\n"],"sourceRoot":""}